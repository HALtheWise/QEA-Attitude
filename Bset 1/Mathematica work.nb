Notebook[{

Cell[CellGroupData[{
Cell["\:d83d\:dcab Bset 1: Orientation and Particle Motion", "Title",
 CellChangeTimes->{{3.6826813785335817`*^9, 3.682681379590159*^9}, {
  3.682710876474948*^9, 3.682710892530466*^9}, {3.682980932118884*^9, 
  3.682980953632352*^9}, {3.684152148208818*^9, 3.684152163265457*^9}, {
  3.684355522339327*^9, 3.6843555383359423`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<../MMA library.m\>\""}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.682710916634346*^9, 3.682710945444784*^9}, {
  3.682711378657494*^9, 3.682711389969411*^9}}],

Cell[CellGroupData[{

Cell["Reflection", "Section",
 CellChangeTimes->{{3.6843560338704367`*^9, 3.684356035429682*^9}}],

Cell["\<\
This document lives in Mathematica, so reflection and notes are formatted \
green instead of my normal blue.\
\>", "Reflection",
 CellChangeTimes->{{3.684356562357469*^9, 3.684356627488124*^9}, {
  3.684356660879795*^9, 3.684356660879858*^9}, {3.684460746842247*^9, 
  3.684460746842751*^9}}],

Cell["\<\
Working in Mathematica was kind of nice, but I\[CloseCurlyQuote]m not sure I\
\[CloseCurlyQuote]ll do it again. Being able to rapidly scan and insert \
images is a hard feature to lose.\
\>", "Reflection",
 CellChangeTimes->{{3.684356562357469*^9, 3.684356627488124*^9}, {
  3.684356660879795*^9, 3.684356660879858*^9}, {3.684460747539653*^9, 
  3.684460787601265*^9}}],

Cell["\<\
This Bset felt harder and longer than those in the Communications module, but \
that could simply be an artifact of my lack of familiarity with this content. \
As a result, I didn\[CloseCurlyQuote]t finish and document my work to my \
normal standard, for which I apologize. I\[CloseCurlyQuote]m not currently \
worried about falling behind because I think I understand the core concepts \
sufficiently well to move on, but I still wish I had been able and willing to \
put a little more time in.\
\>", "Reflection",
 CellChangeTimes->{{3.684460933904833*^9, 3.684460941220278*^9}, {
  3.684461988566761*^9, 3.684462100492819*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Euler Angle Review", "Section",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.684355576440653*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<s1`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], " ", "\[NotEqual]", " ", "context"}], 
      ",", 
      RowBox[{"Begin", "[", "context", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.684355576460471*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{37.9326171875, {0., 7.}}]], "Output",
 CellChangeTimes->{{3.684355576478701*^9, 3.6843555998774433`*^9}, 
   3.684356885481196*^9, {3.684356930097724*^9, 3.684356946521204*^9}, 
   3.684357090075694*^9, 3.684357126382502*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["1. What\[CloseCurlyQuote]s the Matrix?", "Subsubsection",
 CellChangeTimes->{{3.684356017193262*^9, 3.6843560276406603`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yawMatrix", "=", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Psi]", ",", 
     RowBox[{"UnitVector", "[", 
      RowBox[{"3", ",", "3"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pitchMatrix", "=", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"UnitVector", "[", 
      RowBox[{"3", ",", "2"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rollMatrix", "=", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Phi]", ",", 
     RowBox[{"UnitVector", "[", 
      RowBox[{"3", ",", "1"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.684355615645172*^9, 3.6843556345462112`*^9}, {
   3.684355668491619*^9, 3.6843558695914*^9}, {3.684355953641849*^9, 
   3.6843560066896353`*^9}, 3.6843567183055353`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rollMatrix", ".", "yawMatrix", ".", "pitchMatrix"}], "//", 
  "MatrixForm"}]], "Code",
 CellChangeTimes->{{3.684355615645172*^9, 3.6843556345462112`*^9}, {
   3.684355668491619*^9, 3.6843558695914*^9}, {3.684355953641849*^9, 
   3.6843560066896353`*^9}, 3.6843567183055353`*^9, {3.684356761829948*^9, 
   3.6843567686839533`*^9}, {3.684356858638938*^9, 3.684356861628894*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"rollMatrix", ".", "yawMatrix", ".", "pitchMatrix"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6843556890706987`*^9, 3.684355694290292*^9}, {
   3.684355729062743*^9, 3.684355753833202*^9}, {3.684355813610407*^9, 
   3.684355869962893*^9}, {3.684355957252482*^9, 3.6843560072665653`*^9}, {
   3.684356670347975*^9, 3.684356729418119*^9}, 3.68435676902112*^9, {
   3.684356862071117*^9, 3.684356885561097*^9}, 3.684356930196794*^9, 
   3.684357090120451*^9, 3.684357126492794*^9, 3.6844100912283077`*^9, 
   3.684453865941502*^9}]
}, Open  ]],

Cell[TextData[{
 "I\[CloseCurlyQuote]m not 100% solid about why this is \
\[OpenCurlyDoubleQuote]roll*pitch*yaw\[CloseCurlyDoubleQuote] instead of \
\[OpenCurlyDoubleQuote]pitch*yaw*roll\[CloseCurlyDoubleQuote]. Because the \
roll operation is applied last to the body, I want to multiply it ",
 StyleBox["first",
  FontSlant->"Italic"],
 " such that its effect isn\[CloseCurlyQuote]t affected by the other \
transformations (if that made any sense)."
}], "Reflection",
 CellChangeTimes->{{3.684356964061049*^9, 3.6843570836341763`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<s1`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], "\[Equal]", "context"}], ",", 
      RowBox[{"End", "[", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.684355576506524*^9, 3.684355595228327*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{37.9326171875, {0., 7.}}]], "Output",
 CellChangeTimes->{3.68435709015168*^9, 3.68435712654246*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Build a Gimbal", "Section",
 CellChangeTimes->{{3.6843571150670767`*^9, 3.6843571173156652`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<gimbal`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], " ", "\[NotEqual]", " ", "context"}], 
      ",", 
      RowBox[{"Begin", "[", "context", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.684356918444746*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{71., {0., 13.}}]], "Output",
 CellChangeTimes->{3.684356918464904*^9, 3.684357120165984*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"context", "=", "\"\<gimbal`\>\""}], "}"}], ",", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Context", "[", "]"}], "\[Equal]", "context"}], ",", 
     RowBox[{"End", "[", "]"}], ",", "\"\<Not in context\>\""}], "]"}]}], 
  "]"}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.684356918485066*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Gimbal Lock", "Section",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.6843571565479307`*^9}],

Cell[CellGroupData[{

Cell["8. What is gimbal lock?", "Subsection",
 CellChangeTimes->{{3.684357175716885*^9, 3.6843571875286913`*^9}}],

Cell["\<\
Gimbal lock is a situation in which two points that are adjacent (or \
arbitrarily close) on a sphere have dramatically different representations as \
angles pointing to them. This usually (always?) occurs at singularities, like \
the poles of a pan-tilt-yaw coordinate system. When a system is in gimbal \
lock, moving a small amount in one direction requires coordinated and long \
motion of multiple axes, which can cause componentwise interpolation to fail. \
This is particularly challenging when dealing with a physical system in which \
the axes cannot reorient arbitrarily quickly or when dealing with an \
animation environment in which smooth interpolation is a critical feature of \
the system.\
\>", "Text",
 CellChangeTimes->{{3.684357206498803*^9, 3.684357446539907*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["9. Find it.", "Subsection",
 CellChangeTimes->{{3.684357451287993*^9, 3.68435747378998*^9}}],

Cell["\<\
In 3-1-3 Euler angles, gimbal lock occurs whenever the second rotation is 0. \
In this case, the first and third axes are collinear.\
\>", "Text",
 CellChangeTimes->{{3.684357512320086*^9, 3.68435754264904*^9}, {
  3.6843575972704687`*^9, 3.684357603054627*^9}}],

Cell[TextData[{
 "In 3-2-1 angles, gimbal lock occurs when the second rotation is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", "90"}], TraditionalForm]]],
 " degrees, because that again puts the first and third rings into parallel \
alignment."
}], "Text",
 CellChangeTimes->{{3.684357512320086*^9, 3.68435754264904*^9}, {
  3.6843575972704687`*^9, 3.68435779102479*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Particle Motion", "Section",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.684357863873928*^9}],

Cell["I am a leaf on the wind. Watch how I soar.", "Epigraph",
 CellChangeTimes->{{3.684357873358459*^9, 3.684357911492241*^9}, {
  3.684357947878676*^9, 3.684357948826037*^9}},
 TextAlignment->Center,
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<s4`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], " ", "\[NotEqual]", " ", "context"}], 
      ",", 
      RowBox[{"Begin", "[", "context", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.684357863895364*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{37.9326171875, {0., 7.}}]], "Output",
 CellChangeTimes->{
  3.684357863919697*^9, 3.684357922864585*^9, 3.684410091415079*^9, {
   3.684453866100119*^9, 3.684453874702667*^9}}]
}, Open  ]],

Cell[TextData[{
 "As a result of being in Mathematica, some of the rote transformation steps \
aren\[CloseCurlyQuote]t necessary for me to solve these types of problems \
(particularly converting second-order vector DE\[CloseCurlyQuote]s to \
first-order scalar DE\[CloseCurlyQuote]s). I know how to ",
 StyleBox["do",
  FontSlant->"Italic"],
 " them, but won\[CloseCurlyQuote]t be doing so unless actually necessary."
}], "Reflection",
 CellChangeTimes->{{3.684410291024003*^9, 3.684410356745982*^9}, {
  3.6844105887613688`*^9, 3.6844105994801826`*^9}}],

Cell["\<\
For any others wondering how I made this work with vector equations, note \
that I defined my forces as functions that only evaluate when fed a list of \
numbers. This prevents things from simplifying incorrectly before they should.\
\>", "Reflection",
 CellChangeTimes->{{3.68445364349053*^9, 3.684453689355177*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "@", "windyLeaf"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"windyLeaf", "[", "wind_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "t", ",", "fg", ",", " ", "fd", ",", "distance", ",", "end", 
      ",", "simRange", ",", "diffeqs", ",", "events", ",", 
      "initialConditions"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Setup", " ", "initial", " ", "conditions"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"initialConditions", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"QuantityMagnitude", "@", 
           RowBox[{"UnitConvert", "[", 
            RowBox[{
             
             TemplateBox[{
              "130",RowBox[{
                "\"mi\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                 "\"h\""}],"miles per hour",FractionBox[
               "\"Miles\"", "\"Hours\""]},
              "Quantity"], ",", 
             
             TemplateBox[{
              InterpretationBox["\[InvisibleSpace]", 1],
               RowBox[{
                "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                 "\"s\""}],"meters per second",FractionBox[
               "\"Meters\"", "\"Seconds\""]},
              "Quantity"]}], "]"}]}], 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "/", 
             RowBox[{"Sqrt", "@", "2"}]}], ",", 
            RowBox[{"1", "/", 
             RowBox[{"Sqrt", "@", "2"}]}]}], "}"}]}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"With", "[", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Setup", " ", "parameters"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w", "=", "wind"}], ",", 
          RowBox[{"m", "=", "0.05"}], ",", 
          RowBox[{"g", "=", "9.8"}], ",", 
          RowBox[{"cd", "=", ".25"}], ",", 
          RowBox[{"d", "=", 
           RowBox[{"4.27", "/", "100"}]}], ",", 
          RowBox[{"\[Rho]", "=", "1.29"}]}], "}"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "define", " ", "forces", " ", "as", " ", "function", " ", "of", " ", 
          "velocity"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ClearAll", "[", 
          RowBox[{"fg", ",", " ", "fd"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"fg", "[", 
           RowBox[{"v_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"VectorQ", "[", "#", "]"}], "&"}], ")"}]}], "]"}], ":=", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{
             RowBox[{"-", "m"}], " ", "g"}]}], "}"}]}], ";", 
         RowBox[{
          RowBox[{"fd", "[", 
           RowBox[{"v_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"VectorQ", "[", "#", "]"}], "&"}], ")"}]}], "]"}], ":=", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}], " ", "\[Rho]", " ", "cd", " ", 
            RowBox[{"(", 
             RowBox[{"Pi", " ", 
              RowBox[{
               RowBox[{"d", "^", "2"}], "/", "4"}]}], ")"}], 
            RowBox[{"Norm", "[", 
             RowBox[{"v", "-", "w"}], "]"}], 
            RowBox[{"(", 
             RowBox[{"v", "-", "w"}], ")"}]}], ")"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"simRange", "=", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"diffeqs", "=", 
          RowBox[{"{", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"fg", "[", 
               RowBox[{
                RowBox[{"x", "'"}], "[", "t", "]"}], "]"}], "+", 
              RowBox[{"fd", "[", 
               RowBox[{
                RowBox[{"x", "'"}], "[", "t", "]"}], "]"}]}], "\[Equal]", 
             RowBox[{"m", " ", 
              RowBox[{
               RowBox[{"x", "''"}], "[", "t", "]"}]}]}], ")"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"events", "=", 
          RowBox[{"{", 
           RowBox[{"WhenEvent", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", "t", "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"end", "=", "t"}], ";", "\[IndentingNewLine]", 
              RowBox[{"distance", "=", 
               RowBox[{"Norm", "[", 
                RowBox[{"x", "[", "t", "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\"\<StopIntegration\>\""}]}], "]"}], 
           "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"sol", "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{"initialConditions", ",", "diffeqs", ",", "events"}], "]"}],
          ",", 
         RowBox[{"x", "[", "t", "]"}], ",", "simRange"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Column", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"initialConditions", ",", "diffeqs"}], "]"}], " ", "//", 
           " ", "TraditionalForm"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Distance travelled: \>\"", ",", "distance", ",", 
             "\"\< meters\>\""}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{"sol", ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "end"}], "}"}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"{", "\"\<projectile path\>\"", "}"}]}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], 
             "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"dsol", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"sol", "[", 
                RowBox[{"[", "0", "]"}], "]"}], "'"}], "[", "t", "]"}]}], 
            "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            AdjustmentBox["Plot",
             
             BoxMargins->{{-0.05555555555555555, 0.05555555555555555}, {0., 
              0.}}], "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"sol", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"sol", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"sol", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"dsol", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"dsol", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"dsol", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "end"}], "}"}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\"", ",", 
                "\"\<x'\>\"", ",", "\"\<y'\>\"", ",", "\"\<z'\>\""}], "}"}]}],
              ",", 
             RowBox[{"ImageSize", "->", "Medium"}]}], "]"}]}], "]"}]}], "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "All"}], ",", 
       RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.6841506535814333`*^9, 3.684150946135016*^9}, {
   3.684151566123907*^9, 3.684151578845447*^9}, {3.6841516429530907`*^9, 
   3.684151645740322*^9}, {3.6841520654712343`*^9, 3.684152094956771*^9}, {
   3.684152412408559*^9, 3.684152423038289*^9}, {3.684152469477283*^9, 
   3.684152470074185*^9}, {3.6841525152234077`*^9, 3.684152524979973*^9}, {
   3.684152599801343*^9, 3.684152605756481*^9}, {3.684152779244681*^9, 
   3.68415278339282*^9}, {3.6841528330014353`*^9, 3.6841528330876207`*^9}, {
   3.684152897772746*^9, 3.684152902951064*^9}, 3.684153060448002*^9, {
   3.684153145679916*^9, 3.684153147518059*^9}, {3.6841533269820557`*^9, 
   3.6841533270424128`*^9}, {3.684410139527714*^9, 3.684410142919692*^9}, {
   3.684410186966093*^9, 3.684410190248149*^9}, {3.684410382467369*^9, 
   3.684410528507668*^9}, {3.684410694199565*^9, 3.6844107548786793`*^9}, {
   3.684410984021353*^9, 3.684410990697215*^9}, {3.6844110341760397`*^9, 
   3.684411071416007*^9}, {3.684411198943351*^9, 3.684411209943924*^9}, {
   3.68441124645179*^9, 3.684411271390026*^9}, {3.684411370305552*^9, 
   3.684411483752417*^9}, {3.6844115398074217`*^9, 3.6844116393358097`*^9}, {
   3.684411723864697*^9, 3.684411737142964*^9}, {3.6844117787835493`*^9, 
   3.684411800169655*^9}, {3.684411843366345*^9, 3.6844118541486807`*^9}, {
   3.6844122358840523`*^9, 3.684412315115967*^9}, {3.684412531355111*^9, 
   3.6844125413006477`*^9}, 3.684412660874235*^9, {3.6844128187497177`*^9, 
   3.684412895151092*^9}, 3.684413043244507*^9, 3.684413091945919*^9, {
   3.684413207142618*^9, 3.6844132094255457`*^9}, {3.6844132747112427`*^9, 
   3.684413327347631*^9}, {3.684413493126708*^9, 3.684413561340433*^9}, {
   3.6844136070606213`*^9, 3.684413629176927*^9}, {3.684413995220703*^9, 
   3.684414104341523*^9}, {3.684414137496541*^9, 3.6844141380245237`*^9}, {
   3.684431107400168*^9, 3.684431128831863*^9}, {3.684431164390547*^9, 
   3.684431175932407*^9}, {3.6844313566787252`*^9, 3.684431371584305*^9}, {
   3.684431481053793*^9, 3.6844315217899218`*^9}, {3.684431771427443*^9, 
   3.684431848610504*^9}, {3.684431881322021*^9, 3.684431911516448*^9}, {
   3.684431974389901*^9, 3.6844319892984*^9}, {3.684452358684012*^9, 
   3.6844523739286547`*^9}, {3.684452426849676*^9, 3.684452588445571*^9}, {
   3.6844526471512127`*^9, 3.684452686982389*^9}, {3.684452769911727*^9, 
   3.68445282484307*^9}, {3.6844535528086567`*^9, 3.6844535877364883`*^9}, {
   3.684453927145746*^9, 3.684453932528377*^9}, {3.6844539779502563`*^9, 
   3.684454139713732*^9}, {3.684454212991333*^9, 3.6844542655951223`*^9}, {
   3.684454644880116*^9, 3.684454662209899*^9}, {3.684454693840815*^9, 
   3.684454694244893*^9}, {3.684454757346526*^9, 3.684454848263802*^9}, {
   3.684454899503831*^9, 3.68445492919322*^9}, {3.684454981822394*^9, 
   3.6844549842725067`*^9}, {3.684455100896715*^9, 3.684455172101603*^9}, {
   3.684455265990624*^9, 3.6844552983752737`*^9}, {3.684455371302865*^9, 
   3.6844555204165993`*^9}, {3.684455551150828*^9, 3.684455601678302*^9}}],

Cell[CellGroupData[{

Cell["Results with no wind:", "Subsection",
 CellChangeTimes->{{3.684454681424528*^9, 3.68445468792546*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"windyLeaf", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.684455526679895*^9, 3.684455592103929*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
      "\"Distance travelled: \"","167.01351859740214`","\" meters\""},
      "RowDefault"]},
    {
     TemplateBox[{Graphics3DBox[{{{}, {}, {
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Line3DBox[CompressedData["
1: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
4YN1bx2gq56t/m3Tv4RX75mHHV/nCPmuvsJyqqqEr7jZY/r5hCO8ZPfpLO7c
gvrptmxjbZUjcDSmu7Admwi3O7eT0T0Xhxp3jL4sQ5HweqOa+DMWODyPrKRo
+K8i3Mvp3LvqWBxKWyyND1iIoXpyzKs+x+Fg3xizd6U48jcCheBVCThYpcs8
DUkXRX2Q7arzTcIhwENcac41KqqnPYq6OQ0HKW2DdnrKYsJlqmwrr1zHoU3s
ie+96PmEX9yRnLurDAcNxmypRnchwpm7q0xOlONgU37A/Bh/msjbo2bfX6U/
nKnfyHgRjfeHcMFASty3Shz6I1+4qT//Rfhhl1cfU2tw2Mik7O8t+kF4rxMr
a7ARh6+ZETc5fp8JjxNtuS7xEoeFAw+cA8dHCFemHYzRaMJhffZ9usjHIcK5
Se+WR7bgYP1Bzs6hrp/wP+LLhzbzcPCyeOS8NqSb8PBXh1ezX+NQOT68fWyU
T/iQ4K26XwcOnpIGBbIvXxN++h9puaZOHA5Fmm9eEN5EeIvywMh3Pg7NFyOy
Q149JVw/sS1dtguH0CC3zHmRVag/re/VDd7hcC180eiqS/mE03HqgyPdOJxS
TnGLkGui/weRVCNH
            "]]}}}, {
        DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
           FormBox["\"x\"", TraditionalForm], 
           FormBox["\"y\"", TraditionalForm], 
           FormBox["\"z\"", TraditionalForm]}, DisplayFunction :> Identity, 
         FaceGridsStyle -> Automatic, ImageSize -> Medium, Method -> {}, 
         PlotRange -> {{0., 0.}, {5.60484909729769*^-6, 
          167.01351645289282`}, {3.846876745827142*^-6, 55.379139479620385`}},
          PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02], 
           Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"projectile path\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxFx38s1HEcx/HD1YXcuUSF+8Nwhc0yR7byM7lLcxXb2TWcTmfLxO12N0fJ
5cfKpRJ1Z1x+Nqczjrs6Tiaxwlfnx1wjQ9NVItPIre0yqi3vz2t77rWHBzc7
nmeNw+Hi/vbvpeJVKY9ZGIb7vzaZYWgBSw3ftVFi7deD8cHfzIo5JSYBC45n
vKjFysFdhgmPaqwezHbHz8ixDrBqkKKVYf3gpyTn+5yCSfAsv1trt/MBbOqu
9cL7LoJviVyal9q/gKdG3etlX5fBcSkzF1TiNfDF1AGFNm8dzFrgGHIqfoKz
LYnsrGkzmJsmb8DMv8CnaeMl120t4JCmy29SYrfABM7J18or22DR3IkyMgsX
sevk0LGSXKEVWBN9J/lRgTWYXPODy2iwAc/L82LUajxYa9Ikqo17wJK0JR17
cy+4pzR8U4fbB97ejua0edqC1a5ZLaxAOzArozJcFWoPJtim4+Up+8HezCRl
cKYDmPlpJye7nAi+pqqTxatJ4PyyzrPCZEcw4/vywt015FgKzbQlIoPpV28Q
By3II0k1E++lB8CFnu+soshO4P6HUyOWRmTa1CrOwe8guMkfzxF2IMsDNhKO
RTqDBwgbXUHDyIKSYc2DSy5gCuWJMWwFeed2EY/OPwROr464p7A6DLaRkLzO
lSIrCuYWmcQj4B6qJLiuFpnYEGRheLuCeT55MY1HkXs7+yp++yBnDND92v2R
h0zsJKcQZAn1Zt98LPJ669tCAR+ZQbMfHxUg1/eed/MWITMNM9rpXGTV2srn
U0XI3AASnSBD1usTKlOrkB2jqj7qq5H74j3EmXXIbsLAZ5MtyIKtHLNvKzJW
3BtZ3IYsfnxmNliDPE6RUsufI1ObxwTLOuR8f6dXUXpkoy7RXvES+Q93gxVz

             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwVzms0lHkAx3FKSZdBGumJLRUbOuIkXWT+vyiGjEIMhRk87K4SZ5ZFW5GU
JVm5zJRmSdncVmI2t9xSVNOKUG7j0kq5HUVRK8u2L77n8/ar7R3o6LtATk6O
87X/jQsbi/O1j2KtN2Mb6UW1swqEjY96pXzilzlX/m/CXdIWucCgQhpE2jes
ibG9VE+GpsSybGkk+ScoPcsg7gURGPnfTZcmEttODx4zepCUNjZrp0mvk9nA
6vmlYVPETVOhQyS9Q9L7a1jgL0LeAy2JUFpLVGTbNAuMmchSZibwIp4TScnV
G9pFOugKKpMsne8kMS06DaySrRgoS9+koP+KRCtwLkymm+BsiPqtt7cHSeNF
mY/VzV1ofap5XfhmmARYBr1kGLHA8ew4lBc2TsIN7XzVz+yFA79OLDk5QVhc
obD/sSVcenmNoUkfiOmI0pSsdz8CZ7huJ9qniJVKYhd7FRvePqJM6dQn4qxv
tERfwxaWJk3nf1aaIXVn76e6K9ph502vek/bWcLoHtFKYNpDkWd2P5ueI585
51aWTh9EiGxHvKqLHLbsGXnL/HIIHubPzocHy8PNRtmZM+GA4n2/eKRELEDR
8qqJthZHqF57583OXAhmsWG38QMn9IhOWhUWKuDoT235lRmHIRko5ha2LcJ8
w3xsdZwzIn3elrh9XAxBYkpsRoALKmLJxxK5JcgiNvs+m3MxN7ePV7BRCUll
Hwd5mq4opE7kuGxbikLzkObOIVe4+CeTPPNlSBTncvxvu0FRyU9B5LkcVlV6
4uSzR6Bj755tenwFVPr9lMssj8L+7/nQwEQGDG49Ey1Uc0dAXobQsVAZn/1n
5f273XE6vsgm2EMFpR9WyguTPcAeHe69OK6CaU7LENfVE7ZaJgOzIao4bjsv
Ya3gwfqHU4wHM6o4PJC9S66Shyfu15pfxK3EzFWZHc+Mj6iNf8lbqKph6I3J
jxsv81F7ufXJzA01qOQPmGWN8WHSOia3wmAVgnWrUyXwwk1DBV7wnVU42mD+
pvmyF0TGk06b9zIRNJlS7zrkhTrFydLtj5nIfRj4fdUObwjOPy7+9Yg6IsYc
ytnx3tDS+q2NNaKOaIv4kYYeb8zHnPO1DlqNOidFrmCzD/zScEksrwGNPwY4
70N9sDBSedOBWA1MB6hvqa/1gThC9sqesQb8CDPSv5hGhW6kaUb6GjyxeSg6
7UCDkbl9hq1DIcQ3oq8ulYav3kmrG99SqMs+VPteSKOyqDrpix6FrlGdmG+u
0PCvsza4bUghd11vQ3gajUcDbu5qOynwXyYytmbQiNQ9U91jS0Gr1qMmJYfG
RH5DlCCIwsUd13Lt7tFgmyxreiqg4GxfeyC0ksb1yoNrdUIovDv4qTWzioZ9
Y4ekPZzC6LBYOF1DI2985PWecxSO+be+Tn9Iw9tY2VpRSGHQ1+X3kUYa5eVO
yfwrFITKLTlqTTRULK70ladRMNL7LmlPM41qR+2w4xkUstL6Vie00FgbvC33
eQ6FOdXVY1vbaQhmQ6f08ynEtx5b79pBQxpduTe6gMLYaM/uyE4aYan7u0yL
KZxaq7mhuZtGk1acbuKfFFqMhsc/yWjo3nomGC6hYHX1Rea6XhqnDdVqLMq/
/re92m3dR6OthLtMfI8Ci2ZUnOin8R+DgTqE
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
jQ==
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxFx38s1HEcx/HD1YXcuUSF+8Nwhc0yR7byM7lLcxXb2TWcTmfLxO12N0fJ
5cfKpRJ1Z1x+Nqczjrs6Tiaxwlfnx1wjQ9NVItPIre0yqi3vz2t77rWHBzc7
nmeNw+Hi/vbvpeJVKY9ZGIb7vzaZYWgBSw3ftVFi7deD8cHfzIo5JSYBC45n
vKjFysFdhgmPaqwezHbHz8ixDrBqkKKVYf3gpyTn+5yCSfAsv1trt/MBbOqu
9cL7LoJviVyal9q/gKdG3etlX5fBcSkzF1TiNfDF1AGFNm8dzFrgGHIqfoKz
LYnsrGkzmJsmb8DMv8CnaeMl120t4JCmy29SYrfABM7J18or22DR3IkyMgsX
sevk0LGSXKEVWBN9J/lRgTWYXPODy2iwAc/L82LUajxYa9Ikqo17wJK0JR17
cy+4pzR8U4fbB97ejua0edqC1a5ZLaxAOzArozJcFWoPJtim4+Up+8HezCRl
cKYDmPlpJye7nAi+pqqTxatJ4PyyzrPCZEcw4/vywt015FgKzbQlIoPpV28Q
By3II0k1E++lB8CFnu+soshO4P6HUyOWRmTa1CrOwe8guMkfzxF2IMsDNhKO
RTqDBwgbXUHDyIKSYc2DSy5gCuWJMWwFeed2EY/OPwROr464p7A6DLaRkLzO
lSIrCuYWmcQj4B6qJLiuFpnYEGRheLuCeT55MY1HkXs7+yp++yBnDND92v2R
h0zsJKcQZAn1Zt98LPJ669tCAR+ZQbMfHxUg1/eed/MWITMNM9rpXGTV2srn
U0XI3AASnSBD1usTKlOrkB2jqj7qq5H74j3EmXXIbsLAZ5MtyIKtHLNvKzJW
3BtZ3IYsfnxmNliDPE6RUsufI1ObxwTLOuR8f6dXUXpkoy7RXvES+Q93gxVz

             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwVxX041AcAB3B0eX+7HaZf2KRInt3vDnfIy+/rXEiRNETeUtqy4lw8ZGsu
UVF6YTnFlN7oisNFmBFSOkmh0g3FWdIqaalnUrb98Xk+lrGJQXFqKioq/v/5
/9y0l7lxAZke4Yqua3OH+Kgs7Lk1Io+hvjP2TDXN4WNApGbXJBdQSW7fsDj7
+Xg+UzJULhdRT+lxRUkiPoSs+LpS+THqZEIj/30yH9d67lmekp+htj6uFjOj
+Agzow2K5dWU9/TUWCibD0mHuaxQfp3Kqzz/ZpfCC+cNjI9EZ9yn1mnf3Tlt
6wWFoEGmPf+YesgwHUvK50HZULqUtmKUUm49JNXT4mFvisnFiao/qRUmTvPM
DE/0d5udKXw2SSXJb/RNaXjCP2owUJL2mmqN8g2dOgqsj2kvkaVPU9f9aS45
S4CQkeie1Py/qX7XlW15+ykkzoaGJTyaoUZzKFpkpwdit4jL5DMfqEmF24ME
Mw94OfZm/6g1S9mWrTI9InKH87nNnVF+c9T24O7o4FE3aES7tpVv/UztHA/P
cw52Q8qQ02F6iArcVFdfqel0RaT73ezdyaqwYHyfnwhX1PIPRv6SoQbVCeNX
6+UrQS+eivUtW4BtZmW3vQJXYlic7i2V0pA0bLF5l9IFMmVtqHRgIegXhKaZ
QheItkzUh71Tx6aAqnsMTRc05VDv6lU0sa5hi/qaCmd8/syPrrTSQpvq2oou
L2dIiYSKEAdt7HjnFyh57oSQ+AJK4q6DjV95xB847gQNrW00cZQuxmg+lDHH
CcsCIsq5O/Rgw6B4u55yETA2n5p4TB+MfuVH5n4udkpOFwZJDfCkKtWllcnF
nsM1q5MjDRHIaDSijXDg+9fkyKHXhvi2ve/m0gMc+Jk7KudS6HgYTh7O5HLg
s/0n/Y5ZOpqVP4+2TTjidkTxvQe5X2Dy6/l/RPmOyLS6o8qjM6BuYTeo5+WI
68f7b8+eZWATtmu+fekAx/6XKnp2Rvh9UvxYVOKAc0xadHK1ERbZsb3z/R0g
Zr/dsNzTGJZ1upuGPtijXePtNU6XMc5JuJ03y+0hzO6qPRpuAsuRT+MTgfYw
N/91wOOFCWJFPgVHPrIxf2BfnI/gS1ypYs++uMzGtlPIK1E1xcyrZ9UngtlY
IDJYuibHFONtWQrdhWyUZAyNBugvQmKXrpRTz0KTtYh7unQR+vLWTChiWNAv
48z6LiOw5E6ck4DOQpxtuvdZGwLRRIe9viELzTUt+R9tCWysb3K4os9CfLuP
XRWTgMAjz/u5Dgu3lGERDGcCXYkB1THqLIisf24Z9iNwqUTIvvCexPTlm5lC
AQH3uvm2FDkJX0ed3m4hAecIMwfZLRJnmtctXpZCQMOmrvrNDRIBPYOyR7sJ
DFNZ939oJSF5/WLcbR+BC/wGSexVErFsAx+NQgKymtQbQaUkGhs3FMQUEbA5
ulzteDEJQ17Rk8ZTBJzsZ9f2FpFoCbJM23GawF51W+21BSQWJztcul9BIFx7
zMr7IAnhXOrMissEeK7N3VnZJORZzZ5ZlQRcbTT3dmSSSDuxSsGtJdBuYWHk
uYdEr3mu9bGrBLQ2fJrOSCdhffGucLKewB8FacMtqST2MBmtvEYCVjbFDz8l
kxioD9Up+Y1A30nBsJuQxL9aPhm2
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwVx38803kcwPFhNT/K7MbKNzs/CvlxahntfMf3HSvKr+JuTidjpXMeQiLi
yojuWr9Ua5xksR6pdX7Nj7I8+Nw60tZIXPqBzo1SV3r0Q90tx3V/vB7Px8tR
mB6VZEwikcI/9b/i3BfipIiigL4NP9fOHuFBnVR3c0yTQOy8TBIeOsSDIZGx
h0qTQUikkl20Qh5MzVSO1GpEBHPzheMee3mQuTqltUpTSqxSL/yYnsCDq7o7
jhWa8wRn4u0wx4cHsXbk+2WaRkJA3UrpeRwEihvMZqkGEZPlUzoFJwguUG2O
CwoGiPH+Ll3O2Dp4mHGt2Xz+AbHbM9xlTR2A/lrVCrL7OCH6W6ztdCSgMJtx
8Wn9JNHkZDjYcY8Lg1q789Inzwg+Y3H3C60fhMff36zInSb8Igujm+o4sCVB
Xdmc95pwKzF6/l2DL/DHBLqcU28J+ebUj4xJNqQbYmLThmcI1d2TzD0LvEG4
vaxaM/OBeLRFT038igVB7P6SfDMD8ba7J12SsQo48sTu+E2zxIBUIpNbeAJF
gP9au2OOWBLQGpj8fiVkj6w9SuOTwCk0WODf4gzb/PtK9mUZAe9pj8t7iRMo
eT9tkxQYQ6Gw15GRYw+0s6+EIdUm0NvqfkyTbAujZXkbGhrIUBOmp6eN0qFZ
r4xpGFoA3/zjmnti2gJE25+2xb5bCHxrjJAdI4HqMPGujWQK6vx7jwfTp4i5
OZ6gbrkZ2GqKh1tdJroasLRLfG9zkBzlJxmfnuvip5wmFP4W4OdQ3cpimSGK
2U5yWfwikHiUUqkTNOQcEVfrm7oYEgOgSKxmoIg/53PSSy3h4YPoueMzy9Au
hUwa1UCFjqgVnuYHHND+o00bs7ZZQT16teflbScU8tezsSPTVvDBJL7lYpAz
2sRk62ezaXBp/F8j7SFXFPz9D5Y3DDToPWeTGNHqhm7Fnb3zu/gzsD4Ra95j
6omKlt82CqTRYdGgPWWVuxdCJwdvGWroUP7E/4zp2tWIPfiCtNjDGjKcHp0K
BxaSe5EFWY3WEN+tjHYg1qAy1pvoletsIHRvx+eHw72RmvLmqk+vDahC+xw9
eWyUWdKrPLGVAb905+Vbb/RBTOa5oYDnDBDuV4QqA33R/I8Hk4IzlgA+RcPk
zmvRzgo4Vmm0FEyjFO7eNhxkIqKuCD28FNLCxCPKaQ6qLBgZj7C0BY4eRu07
v0QqF5GvrMoWltoNMBTlfsiy2scQ4oxBS/drbX48jpLc8jbUuGKgD9vVPp6I
o46mzlMf3TCoSahhBSfhKEUd7FHvhUFMCqitUnF0Ux8bR+dgsP16wY6qfTgS
uRzoHN2EwW+qa/VyCY5eX+kpyszAwCInP5mvwVEI26Jfm4nB12Xkpjodjs53
RC5zzsbgXKS4mDyAowjd/ebhfRjwPM7cbhzGkWL6+QT3IAYy2ss/TCZxJGRR
gylSDIJ2P7CTzOOovT36dEI5BtX2MYwJYy6yCix/3F6BQbK9ocJ7IRd1Rjnm
psowYE+p1g8s4qJlWd6XBy5h0NH5rSMF46LM2ZwZ9ysYOMWGZUUzuUhT3LGu
uO7Ta/OjZA5clHtm/UNfJQaRXvJGH1cu6meKXUpbMFBfka0WuXORy8W+zGdt
GPBtJ3DNF1y034veFdiOARG++y6dxUVDbTEWldcxKBEHv4tjc9F/ttouvQ==

             "]]}}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 6.683212585683941}, {-28.204543368784034`, 
           167.01351645289282`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"x\"", "\"y\"", "\"z\"", "\"x'\"", "\"y'\"", "\"z'\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.6844534969822273`*^9, {3.68445352954008*^9, 3.684453590472786*^9}, {
   3.684453766157077*^9, 3.6844538210857897`*^9}, 3.684453866209806*^9, 
   3.684453934636299*^9, {3.6844539805259237`*^9, 3.684454006459635*^9}, 
   3.6844540366489487`*^9, 3.6844542659500723`*^9, {3.6844546451728897`*^9, 
   3.6844546627258244`*^9}, 3.684454694965514*^9, {3.684455536202701*^9, 
   3.684455604860815*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results with an extreme tail wind", "Subsection",
 CellChangeTimes->{{3.6844547112001762`*^9, 3.6844547204993896`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"windyLeaf", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "30", ",", "0"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6844556130289307`*^9, 3.684455628763606*^9}, {
  3.6844556640586433`*^9, 3.684455664198542*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
      "\"Distance travelled: \"","271.21674079783554`","\" meters\""},
      "RowDefault"]},
    {
     TemplateBox[{Graphics3DBox[{{{}, {}, {
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Line3DBox[CompressedData["
1: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
wHULbxBuHVT7IOobDo0yYRU+6S/M/wWS4yS1
            "]]}}}, {
        DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
           FormBox["\"x\"", TraditionalForm], 
           FormBox["\"y\"", TraditionalForm], 
           FormBox["\"z\"", TraditionalForm]}, DisplayFunction :> Identity, 
         FaceGridsStyle -> Automatic, ImageSize -> Medium, Method -> {}, 
         PlotRange -> {{0., 0.}, {5.988613375685405*^-6, 271.2167355880267}, {
          4.422260366735524*^-6, 62.44274628269807}}, PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02], 
           Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"projectile path\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxF0HlIk3EcBvDpTF2e85puZXikkpWpuFGJx8oN8wjPohBxXtNQWYpl2UxL
Mc+tkm1gWXkl2OHQdSy85jKPMBeIlmkuxcxW7zuUGl4V5Pf3wMPD59/HiZMT
napPIBAi/vbftq6S/Vm11wII/8OeTXtDx5MCt+2S/qHNAueByZ63qetYMdjY
DI/WYkKwAX9Pjga7Dy6R0Te+YR3gvmjmwBLWB5YWHSywlqrAa6EOubLXH8Ga
OqOF2Xg1OETm90K3bxEsEai669qXwZ4RwvxkNgb+QVlvsn2kBT8JdPxevrQC
dt2SDLLif4FFtLdypUQHxjaY7JnxNfDGBav04COb4Outo2NSf0LQtudn/OmZ
eXpgRkEkN7tFH0zql7u9VxDBXRNxXgk6A/BnSdgAm2oIXvDIbjwVYwT+RPWJ
7CwzBsfIo0p5zSRwk/tdw9jpneA8JstGtGkCpvfWatxoZmAVyZA8fdIcrNGb
7MVzLMA451yCXawlODX/aNAZDbJ90uGMyEIy+HlHBCOOYgUWT9WGmT5ExqUP
lEt+1ugf7cj81BjyK2OXE5cSbcBepYLYA2vIc5OezYIqW7DpjOgslWYHdg2l
PpN1IRdWDp8msijgPl9hA0eNXFTtEf71sj34SrcmwNHEAcyNG5pIa0G+qVB1
JjKoYPqX9t98JfIg987c00QaWKSUW976iVyR2lNuq0Xm71AQxCvIKSHDWL0O
+ZBy8l0LcRd4eGBV8JKCvKnwIqsDkfFk3xspTOR5IkNv8TjyyLEAfDkUWawI
H1+NQfZRZAhJXOS9yVmkqkxkeyKv2DwLeYt5kWd9Hnm0vyxqdyFyD6diqIGP
LNWvCXYuRpYw67zdy5Cr1OK2tnLkqyX1TvsrkXOd70keVyOn9TeSvQXIfwCl
ThOv
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAp/URPEaPgz6gz5yCOR7ZPkffZsg2
8WE/Dmet0CcKtz8jZ9qpD/FxPzegY/SdCcc/ESuUGvzwgT8HjbDR1QjXPwgN
8VLy8JE/c/gMJGwH5z8Efh9v7fChP+m5xnKvBPc/grY2/erwsT/W+9xFTv8G
QMFSQsTp8ME/D0ZniMr0FkCyfy55E7LSP44FQ/s81SdA+0kZc7bG2z8AFG5E
d6UxQO2VB+XfVuI/t9sB1SA7N0BFtjW5+SrnP/bHINNQQT1AmZDSvpWs6z+K
2tiSj2xBQCtNkXZjR/A/Iqj+06twREDuF/ykFa3yP7ZDLIE9Y0dArz8e7Ijp
9D+HZmdmQyBKQCT/mcdGVvc/PNejBpgVTUCXG827xZn5Pw364NIq1k9A8P1C
R97R+z/YaoIsZUNRQP13EmdBOv4/8h3X2+e3UkCEp8zPsjwAQLwdydqSElRA
5N48Nmp0AUA9o6lgcYlVQDd5TmhupgJAc4SzZKD4VkAJwrsm08MDQGrmSBFl
TlhAtdZVL135BECS5rUFa8BZQOCZS8RHGgZAaSG3bDoZW0DlKG6jV1MHQH4a
XKJNjlxA3RoyTrSGCEA0Y4TIE/xdQFO7UYVxpQlA9SLT9uNQX0CkJ54GVNwK
QOhNR378YGBAdEJGFJf+C0Axh+b9Fg1hQDbAj+0mGw1A0NsDU6G1YUChNp7o
W/kNQEw7zjYWOWJAhMj40Q==
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV13c8Vf8fB3DrXnfZJXEbipSdCkXuy8rIPZcS+aafktAi0jAyUklkNowm
SSFFpURlRiqEhIRUSkVoUEa/T3+dx/NxzvnM83m/30fZ3XfNVhEhISGWsJDQ
v2v2TxnjVfGRJmXSynuWz243ser2rNUf3sx7dtrf56b4Xd58r45rUsN+vFA6
gm6I1fBkNE4qTgxF8NZOt+f+mWrlMSSG14wMJfLslVPKi7/38cRC5/gODF3i
1RmNHnF784t3qEh/8vNQAY8nvslOqICO8jVmVf1D5TxlF5U0Hxd5FIZpB8oV
NvEYGRbBe6MXYNxm5p6ix695rV12JeXGuhg4Jf6h26mXN6pSLzpRvxSWRcuK
f6t/5L1tnZJQ9F+O1ISmh6fyvvByd+fb9gSvhAY/cd8WqyHeFK1MyroGGJwx
cXn69RGetWvOU/NLZrjBm/31WP8PXrWj2aviFRZQ+Ztas8pplBc/X4u9rMUS
Z5Sel1Sn/uaFujtE/NGzwtCkmVXXi3Fe8esTw/I+1pjcL+tlumKKN2IcsDjm
sg0OZz9rKDQWwqWEXx/XX7PF+y5j/e0BwvjSUemil7UaBoGUt88VEZTp3Juo
OWgHZkXJguZKUZQbX09t0eTDVb2LulYrikU1gyuSdfjITxLaH/ZcFPWszN8C
PT4ct1jWaLwSxV2zpw2VBnycF2vwOvxZFHc2f3l70oyPpVa9V5fJiKEl6v6t
Tmc+3J4xNFL+JwatrvxS0Qg+7rSu09n4WwypRcXZt5/zUXH9WnvPpBhqbxdm
tDTwUX94MtJDhAbL6YFTIy/4+KSX1baDTYP4xO029VY+FON/RATNoiG77NXM
qC4+wq2SW86Y0hCbPr1reJAP23uNgU3RNMxvPtCXIEnBOV5FxSmOBsXqLO5B
aQoengfq25NouChdccdLlsLBaXPnv02noYLOkjGUp3Bzt++zb9dpWO90flf1
LArTF0nOkWiiwbfx67MkTQo9qaurrBTpkPmdmDRmTYGrUiuqOYeO3w+jxVtt
KazPtzCXVqGj4b+m1AI7Co0VKyvatOh4YZ0hv8WeQtkXnbJtpnSsshbsueFM
4dLKaaUx3nT02Jo+GdhKwf1t562GIjreaD30Eo6gcH6Hy/dbJXSc356fk3GI
QsfPl3opZXQU2+hLmB2msIbVULCpjrSvu2ZxcBQF8yXlN4bf0EEdOTvaeoKC
ypGsXDmaOAat3WKWplH4sNAn03mtOCpsdCyOFVDIM5wpr7peHP6L3GZ9LKQQ
YF11bMRVHLv3BS2yuE1BzFvR54SnOGqe53eMFZH2sh8bVgaKw2FRXoZdKYUt
qnPqtS+K49CNipfnHlN4q9w4RhsQh8W2fZof2ylcXRy8o3lYHGvPyIZxXlPY
bbqg6+Ivcbz330zX7aQgtDmk0kiIgdeH+Lf8uijMvbgwzk+OgTHj9qjuXgpu
syPmv1nOQNWi3Wpbv1B4o6hH3T7KgLOQ7FmFcQr/S5U014lh4Imc9KsfxD0z
vhjkxDOw1bIksmGCwvtpl5UvpjCgYW6qFz5F4auk/M+YHAaS6Cof6oUF+CPy
J31LPQMHPb7nKDMECIloTehqYuAdzYf2gXjqb+ERl1cMrP+7pOkKUwCRyR2+
gh4yvtLaClW2AMzRN2ZGIwxcjJwvLCMpgMKX8n5ZeSZExib/nJUTIG3b+a4T
ikys7LseajVNAO6noGbGHCYsX5nuHSKe+2HJgyk1JobVjUpWygug1p2V8Hk5
ud+4P7daQQD95miDio1MKKZrqMbMEuCeg6fmSncmijX9X3NnC7Ci0Uz5nicT
28Z1aNeJVz4fZ+X7MjEtfNmt2jkCWNTs6kqNYGIk0iNoQFmAtSUOR/yymFhs
q/bgq6oAYgNOUvwcJroVeM98FwhQNNs1deENJrY86GIOEysc8rzefY+JXNte
6UE1Abqsg1/ynzERGacnaFokQHxQuNuiF0xw7MqbV6kLgLwj/WKtTPg160YV
E2dKJUyWdDPRat8VlKohgHfrZVX170xc5l85ba4lwExGzg3aGBNqtT7J14jr
lt9Y/naCzC/D95GEtgBa54r5KXQW8sctsxqJR7bU76UrslCntvcadEn7p5r/
vp3NgkK8rnIKsWNNW/SD+SwYjQbVDhDfVX93LkCLhaNVH7OSF5P9HR6t7gUL
vab8c0/0SPvzJwUPLVmwfpiXJLuEzM9RpCPVloX2x0N3XYhN73EG7R1ZyP1j
n9RLPNIvc0DThYVU10NWKksFuKw0Q4TxP/L+vQpND2J6mLL8Iy8WbmenRXUR
37254GLaThbiXawmFZaR+fdqqO/zY+GSqVamA/FTS30TrWAW6M31YQ+IEzir
PdPjWJBdHX8wTJ/0b2I/tC+ZhXEZzX25xCO+64LWpLDgJ+N04SXxuma3OGYG
C59PBUeqGJD+aVsVPlxh4YdYrIkN8T397RlluSy0hq9V30msmBZQtP8OC9ru
i0/mET99Goi191lQSneVrSMOmQyt035ExnvMu/wDsbbOYUdWFQv2sW6X/hJ3
b4ru+lDLAiVuVzjDkIw3Kc67/DkLV1wMf2gRm1Ulj5xtYuFar7aXGfH3nykh
B16x0CW0gr2O+LLaebpjJwvCsh49W4mlaltk3/SwsE+57+ce4iBv9hzPDyyk
e4/tDyfuY5hpfOtn4fi6TM8YYodrBwwODLLQsu5b+UniUpsb5sLfWQhpfR99
lnjh5w+C46MsTJjHPswgTj7OdZWbYMGGNeiWTTylvtb7rBAbrSdlfXKItz2N
DlClsZFAifTnErfsKAvPZ7Lx+VJ14z+DMxprIMlG25iH6r/nc/O0Ustk2XhZ
+qnvCrE83yPLZgYbvU4u0//1d2ggraBJiY04nUc304kHTrx4sGEuG9/z5xUn
E6/XZtS9V2GjxDhW+zhxZb1J665FbKhATCaMWNt3b+8vLTYm5yRv8idOk8ob
DNNj44aZ6SwPYtrN3j8MAzZWSM6wciTebT9TPMmIDaNP3K5/6905JJBTAhtf
l23o1SEuXPxAQ8uGDb9HGXo04llN3w2K+Gx8rCwNHSD7ecxf3YK3hg2n57qG
LcRut864OmxgIzPE+vtZ4rq19d4dbmwEfJr4EUqs/0Ns7xYPNtQ/aHq4EXOW
+Z/Yu4sNbSXlGCXi/S+vpk75seHK/WU2Sr7P3r3dWVH72Fhv4u39gri4yO5h
ahhZr3DLiXBiFefIunmH2ZjnX77diThhtLg19xgb51QnVqkTexqqfXuQyEZ2
eIP1c3I+XrRtHF91mo1S4UCfs8TGgSfFG9PYWDgmIrKdWO6+8NzeTDZkaR3+
QsRlRp329CI2oBoRokjOo0an7Mb4+2z01CvKviHn+XSIzTaFR2xMxLVNP0+8
60FRhHot2T/jXi8lYkVeYiHVwYajCNdAlMSLALNV085Mke+hMT06SkeAHd65
a5miHOQn8Er1iN3jpJODxTlQkdLY1UnilX1Hh8wmaQ7upf+20SDW9PeVWjSP
gwtpzkNFmgK8v5TCKrHkYLhUb/QIiaevayZttGw5KFKbKzuTuGnAPfoCxYF6
4qvcnIVkPsu1GIedOdBbXb3hCYnHZ1+U0/jbOGjzisz/QeL5OuEvQt2xHGhL
P1sgOk8AOzV7OCRyUNy1Qi+UxH8L/p2wylMcKF4ZKx2dK4BeathU9nkOOqoO
2feRfCG5eNrE7psc1Ps92F1A8s3jTStHRVo42CZpeO7vv3xUFj+wQEkC7jqC
3mCS71xTZ1X8niOBMoFN8F0JASL9c08/U5HAKW6d/TBHgEaVGp6/tgQcFE4U
uJF8uT16KvGBqQTm+jmvViP59dyaXfqO3hIYsmN83kzysdgH27CIOxJoSQpQ
PTJCQf1h21rH+xLQcijYemyYgsMZz4VqjyQQmv7lXfQQqY9sDr14ViuB2rDo
tKhBCob5xfMVOiXg86ZseNdnCjv2L6zNF5GEUkD/mr63FJqYdJlOgSREO2QM
jzZQKHSo9nJ1lITE8l9CnvUUklMPP+xcL4l4mXXmFs8pOC4S3flmsyQYw3lL
J+ootFoL1XTtkYSm6kidC6l32qP+hLw9I4nq5/yGp6Qe6qF9+9TXLYmsscjD
MVdJvcfP53m9l4RzwefEFdmk3ju16/THT5J4kaut+CmL1HuqX80/DUtiwfGQ
dJNMCu8s+s/3i0phZWCAe/s5Cn2R7xy/qklBN0SG8ziJwoBwW9mwrxRqOv+n
HBJMYWLiUV5TgBSmDhiiI5ACZyw75VYgeT+n5Iz+AQqag/t3742UgmDl1FB/
AIWdHTPm/j4tBd84PcrIh8LnQucwoYdSkBH1KT+2icKPgi/nxenS6F4uN1Vv
TmHYfcdGeUdpuOXkHufQKJhk/toZ7CQN5ekakqKiFGLfRYT0rJcGXgx1jQpR
WOiRkp6zURp3M055d07wsWlrdbuJlzT6SpbMTvxB6nuvOU5eQdJIl9s479o7
PnJ3NlP3Lkpj9rifxMkyPrbuM8J/A9LIu2B43GUvHwqbl2+jQmRwK2rPSvlX
drhXwDdYN0MWJzqNaC4ydkhpj1/NuSqL5WrPq5KxGsOFGdX9y+Sgd64wMWWj
LQxGnr5vb5DDsqs3XO9SNihlzLcNcpuGwWXSDY5G1tA5kuCoNT4N82d5j6aN
rcLbNo2shNjpmKO09CTtjiU4XWc2KCrJ47WoicTOLeT/zEbxbtEdeYT3he74
22WGkJi69aKrZqDh2FTQgk2mKF+SeMG9dwacBhXPBDnzEHZiod2nYAX4VZXn
WLUY4eDDAZPZ7JkYGYx26vE2hPe6J62eV2ZCcpZjDOvEUiRVNt12M1BEx+EV
P4oadKH/Lm8stFoRmRKq0j0sddR4n3t7000Jrb79jk2xyjhTXSKd/E0J2nuz
g2SrZHF866Nj00eU8Cc6aufMIFmE0iqFUn4ooWy/uPsMXVl4WNYNnf2tBJr8
z41j6TLQrW5rvCLKxZvevkpqjzTqqn4m3J/BhWJp7bJz4GCqUkeml8cFq71c
0vajCIa3LIn2MOPizoHAO7MdRPBe1ED4owUX/yWyq97eF8ZTc5PhLzZcTI7X
qCyJE0JKpd2Ln2u52D/teiLde4KnV7ktkenNhc3q5gN3x0Z4qlt2MWO3cxEl
O5akWzfMUxD1i5DcxcWa6yOdR9OHeH/NDvjJ+XPReOWp7ungr7xnFUcdZoVw
4fZJO2er8DveI/fjTy6EckHPjNDQzOjhFYrEmc6L4OLU4MO2/4508lLNTi1W
O8pF+Dfj4jJaMy+2N+XatWNc/BaUxFsff8YLP3RWWTOGi+XJGdvHxSt5e+Zd
TM0/wcUGYwnPpcxbPM+KTJnFCVzUSfnmbYxtMvk/iNEX6w==
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxF0HlIk3EcBvDpTF2e85puZXikkpWpuFGJx8oN8wjPohBxXtNQWYpl2UxL
Mc+tkm1gWXkl2OHQdSy85jKPMBeIlmkuxcxW7zuUGl4V5Pf3wMPD59/HiZMT
napPIBAi/vbftq6S/Vm11wII/8OeTXtDx5MCt+2S/qHNAueByZ63qetYMdjY
DI/WYkKwAX9Pjga7Dy6R0Te+YR3gvmjmwBLWB5YWHSywlqrAa6EOubLXH8Ga
OqOF2Xg1OETm90K3bxEsEai669qXwZ4RwvxkNgb+QVlvsn2kBT8JdPxevrQC
dt2SDLLif4FFtLdypUQHxjaY7JnxNfDGBav04COb4Outo2NSf0LQtudn/OmZ
eXpgRkEkN7tFH0zql7u9VxDBXRNxXgk6A/BnSdgAm2oIXvDIbjwVYwT+RPWJ
7CwzBsfIo0p5zSRwk/tdw9jpneA8JstGtGkCpvfWatxoZmAVyZA8fdIcrNGb
7MVzLMA451yCXawlODX/aNAZDbJ90uGMyEIy+HlHBCOOYgUWT9WGmT5ExqUP
lEt+1ugf7cj81BjyK2OXE5cSbcBepYLYA2vIc5OezYIqW7DpjOgslWYHdg2l
PpN1IRdWDp8msijgPl9hA0eNXFTtEf71sj34SrcmwNHEAcyNG5pIa0G+qVB1
JjKoYPqX9t98JfIg987c00QaWKSUW976iVyR2lNuq0Xm71AQxCvIKSHDWL0O
+ZBy8l0LcRd4eGBV8JKCvKnwIqsDkfFk3xspTOR5IkNv8TjyyLEAfDkUWawI
H1+NQfZRZAhJXOS9yVmkqkxkeyKv2DwLeYt5kWd9Hnm0vyxqdyFyD6diqIGP
LNWvCXYuRpYw67zdy5Cr1OK2tnLkqyX1TvsrkXOd70keVyOn9TeSvQXIfwCl
ThOv
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV0HtcjXcABvDTRRdUjhNdztsoLZbMhBPy6X3e33vUoiKnYjNMdFFoTbNw
HMqtmzpRqg8NSWm1Ueu2sjidbsRSRkUrJbqJc5rQuu3dH8/n+Xz/ef54LH1D
Nvpp8ng8dy7/d/Ywf7VzwnGnzdmCmrFYMVw6/OtE6h30q/qv/L7lPC/gaY6R
OpRu2rzSsSpGDP7CJPMxVQRd2F8WFhcthp6BeuOQKpFma5+cmHNaDG3ZnJBB
1RU6IOJ18vpIMSKLReP9qny6tHZcpzlcDMVGUtWnUtADfcIEmb8YBUc/Pygo
aKJdNG+WujJijLqa7S+ueUYva006E24pxmCy7ssOny7am+emqNIWY03x8t9H
bHto25WZlxf1skiTN1Uk5w3QkdLfJDcaWCx0Tzyw00VFzxEEiLxKWLwxGcuc
9csQPXA970LYFRY36E9eR/W9ozvmOlaUx7Ownkyrdfb5QGsc0ZRZSlmkCB+U
V6eN0PxtrSfoPSxU48SlvXGUPjfe4T6ylcX4jzMDmFUTdGSNZFnzehYnsu83
FKzmoX/FfH4zy6K7fbUoKEwDV+Ila/VXsHA46BG4L0sTmp6ZoqRFLPQry20e
KbWQYXXrscKaRdET78VbR7Sh82/7IQuKxfO0dVUu5jqwCJbY/2XM4uWCfVc3
SXRxnpUeyDVg8be5vUfhKT2k9PbEQpeFpNzzZOg1fbAff56ap8Eic/5POl5t
UxEmih/qHiUII87GKRPTcDTiAf/8ewLRnYRBG6EB7Oz0ojzUBE36Ovy29YZw
rsv19BkgGNRouaMOMULNJjdF0EsCtW/w1tleMzBl0m3oeDuB3wFHfD04A0E8
UaNdM4HpjpW7PaR8OFa32dQ1EJTmuzt4m8zEUPaefda1BKmtCeumX5+JH8rP
TZFWcHsFGdV9ywXIPzZNFlpE4DBU393aIMCt9OtzdXIJbunNW3touzGycwTy
25cJFp+Uey0aNcY2SXiWbjJBZ8vCa/K4WTByrcDZaILp7SlbzIWzUZJu+7jz
CIG1q3lJcdFsPDUrCS77jkAae2+zlrMJvowLWjN1F4FiaeIl3y4TuEr/qe30
Jjh6ZoFb72FTPBx2MrjoQnCkYtDpk2lmMG4pMOKtIgj0vvvEP8sMyvclJu9t
Cc4qmwq3O5ijsMCG5FPcny/yPsqqzRFlVTd20pCgNjC98+Z2If7UaLMcm2CQ
Ul0+49xbIYwMTVXfqBjE+N2OmjUkRMLZ6L1CzrIpSl7qOyHKUtHX+pbBrjX3
VBdHhMhujn7mw/mL6paHWVoUMloe5W54w+Be1bC8zITCng0XxtnXDCaUi/ld
NIV3zTfCP+tloN65NHoXofD00qSyp4dBt5aDRo+YQrtBn0EW53rWST3gSqE0
LzHdinOq0q1xWELBx/NgnvAVA3vl7kT9QAqnB4tiDLoZfLpzr35cEAX/ZaV3
6l8wMNUKjTDcS2G88dBwNOdJEh4q+J5CUs26LTqc71ee8rSQUgi232062cng
tm/M3UsyCtopZeI/OBdoxjNWERQeRHSFHOacRpKXzD9FQZ6oqPzwnEFcV2pO
ThQFj3RZfxHnY5EXLe1iKSjGLPhhnPdbXU779QyFVcUZInvO/pVX+UvkFNKb
jbaoOhj8B3MwLqY=
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAp/URPEaPgz4VcNWp/ItEQEffZsg2
8WE/ooh5TPqGREAjZ9qpD/FxP3L71AP5gURAESuUGvzwgT/0I8dK+XdEQAgN
8VLy8JE/I7f0RAdkREAEfh9v7fChPyP6ZzpWPERAgrY2/erwsT///oJ7ve1D
QMFSQsTp8ME/xSQ1DpdTQ0Cyfy55E7LSP04H0SNgEkJA+0kZc7bG2z9JBI3+
EfVAQO2VB+XfVuI/yJohPjrTP0BFtjW5+SrnP7jxpNqMpz1AmZDSvpWs6z+V
O5qkp7U7QCtNkXZjR/A/fwTwn0OuOUDuF/ykFa3yP+mef7SkwjdArz8e7Ijp
9D+DYGW7sgY2QCT/mcdGVvc/MmJXP5czNECXG827xZn5P7VIYQiKizJA8P1C
R97R+z+aiWce5vUwQP13EmdBOv4/g5E+LqmPLkCEp8zPsjwAQAED6HbXfStA
5N48Nmp0AUCB2SOpHzooQDd5TmhupgJA4nDQXukTJUAJwrsm08MDQJ+KgZMJ
LyJAtdZVL135BEC1nIXlkSseQOCZS8RHGgZAeNNnfjlzGEDlKG6jV1MHQCos
3+GDTxJA3RoyTrSGCEB0CmhEG6oIQFO7UYVxpQlA/nCm5OAq+z+kJ54GVNwK
QDBZsnetO8o/dEJGFJf+C0CTmn06NufyvzbAj+0mGw1AEs09omtEBMDSCQYR
3E8OQPh//IQF7g/A7QHYwPFvD0CZbuDHSl4VwPFia10WVBBAzddOdv4sG8Bl
djtAWu0QQJ1T20bkaCDAGGE5aU58EUCLimVeGgMjwLixTTdVFxJAt76qiTnM
JcCY2Y9LDKgSQCP1vAkoXCjA8bKixek1E0DioG1bJtUqwDfyy+TZzxNA95fE
7913LcC8CCNKel8UQMoT9Qkw4S/AL4WQVC37FEC63zVIIjgxwOHYK6WQjBVA
kD9VvwBjMsAM3pdbGhsWQPGjNmUvgTPAJEkat7a1FkCqZo6/r680wHyLylgD
RhdAVaxsV1vCNcDBM5GfYuIXQJyb9f104zbAf40oTOh7GEDaLSIrefY3wH2+
7T4eCxlABRZZXQnvOMBoVcnWZqYZQE+x7UzF8znAksPStF83GkAdN2Wj5946
wDbjrPh+xRpAa83mmKS9O8DHaJ3hsF8bQALKXkefpjzAl8W7EJPvG0BzNbNh
7Hc9wIplv4gV8htAbK41TIF7PcB+BcMAmPQbQAC4RZwVfz3AZEXK8Jz5G0Dj
XyttPIY9wDDF2NCmAxxAu+bY0oKUPcDKxPWQuhccQKE5NbTysD3A/sMvEeI/
HEC71ZAEX+k9wPFjM4lkQhxAIHJwr+DsPcDkAzcB50QcQHJJ18Bh8D3Ay0M+
8etJHEByiloXYvc9wJjDTNH1UxxADbYZlFsFPsAyw2mRCWgcQITRvdMxIT7A
JWNtCYxqHEBD5+vqqSQ+wBgDcYEObRxAGmMnaSEoPsD/QnhxE3IcQAcZ6poO
Lz7AzMKGUR18HEC8hprU4Tw+wL9iismffhxAdW8vJVVAPsCyAo5BIoEcQHBT
Gt3HQz7AmUKVMSeGHEBSbheDq0o+wIzimKmpiBxAdXo8cRxOPsCAgpwhLIsc
QFYs3caMUT7AcyKgma6NHEA1EwOE/FQ+wGbCoxExkBxABc23qGtYPsDVXjas

             "]]}}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 7.14081232874867}, {-30.34539274680448, 
           145.78396168021789`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"x\"", "\"y\"", "\"z\"", "\"x'\"", "\"y'\"", "\"z'\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.6844534969822273`*^9, {3.68445352954008*^9, 3.684453590472786*^9}, {
   3.684453766157077*^9, 3.6844538210857897`*^9}, 3.684453866209806*^9, 
   3.684453934636299*^9, {3.6844539805259237`*^9, 3.684454006459635*^9}, 
   3.6844540366489487`*^9, 3.6844542659500723`*^9, {3.6844546451728897`*^9, 
   3.6844546627258244`*^9}, 3.684454694965514*^9, 3.684454758379957*^9, {
   3.684455619766122*^9, 3.6844556292034817`*^9}, 3.684455664733231*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results with an extreme headwind", "Subsection",
 CellChangeTimes->{{3.684454769917076*^9, 3.684454775234585*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"windyLeaf", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"-", "30"}], ",", "0"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.684455632582423*^9, 3.684455656968849*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
      "\"Distance travelled: \"","47.150362490412874`","\" meters\""},
      "RowDefault"]},
    {
     TemplateBox[{Graphics3DBox[{{{}, {}, {
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Line3DBox[CompressedData["
1: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
t8fZyw3T6NCk+FG3qeG5wf8BsEFDIQ==
            "]]}}}, {
        DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
           FormBox["\"x\"", TraditionalForm], 
           FormBox["\"y\"", TraditionalForm], 
           FormBox["\"z\"", TraditionalForm]}, DisplayFunction :> Identity, 
         FaceGridsStyle -> Automatic, ImageSize -> Medium, Method -> {}, 
         PlotRange -> {{0., 0.}, {5.2022397336724704`*^-6, 
          56.979441286316565`}, {3.3112177952639876`*^-6, 48.41023670483557}},
          PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02], 
           Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"projectile path\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxFz30s1AEcBvDLqdw55aWcbMh5ye5H1u4kK47zdm2cOiSSi+uKMmfWNCpO
Wl52XtJKGyFjs3QOmxbid04jK03W6nCbbhLzWkbJ4qot3++zPXv2+fNxTJKJ
pEYUCiX8b/9tdt2mRf+m3I/yP3L6gJ2Lu5i37SJNp6uekIFLazgESeSCyxXp
Hi1EGfgetaylkagFW/LsZU8IFXhUJ42oJUgww2KEUe07Ai7eyFJuHdSCObdX
Fa90k+ACVs8z4uAX8OvmsZAw+iy4fvRGTKRgAXzSuZ8a4vMNzOZ0rJWwV8Ba
8znWUPAqOF1jOufp+wNcUaWXq9jr4LzADRGLvwGOIw29aq/fYANNcEkUuQVm
+tWn5XAo/tt21ltfTyF2gCvn3e2Ex4zABrFPuYBDBQ8fn6k7EWgMvkDIDvgK
d4Jn7ywmRIbuAn8KNuNLoneDu9KdVgpPm4AlKit6t4AGzohuJL9G0cGZUg++
W4Qp+LPuTJIkgQE2T46be5psBuaej+KZJO4Bk53LR8Rpe8EOavX6NNccHKDM
VLBa0Uzh5tKElwV4xsngXdeOvqJ8H6H3scS/Vx2EHi/QAm6c3MCxAp9rleYJ
u9ApiQvJTd77wOyBQIdcEv2OW0jTBe0Hp2pDxwP70D2e2iw3gTWY9nLKwBxA
e4t0nSUBTLBNdSNfPohetZ1ruxVkA3bNn3zbHIKOnf8wMyZA93aTdkfD0QXx
D4qWotG2Nf6J4stonmOleUAxOqNIQcgU6IbveSGPS9EmmtSbvyrQo0n82bYq
9MWGRZKlRD9kTI2fUqGHrmnXctrQh4P7iYkO9M/pR5X3e9FsYWl7nxod/zx/
eFmDVt9No4YNoleWJPbZQ2iXmFifpjfos6Qw6uMwuvhQkMx4BP0HvwMKww==

             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
fIjHrjP35WtkQo3SoEFN9Qfj/wFPOjhB
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxFz30s1AEcBvDLqdw55aWcbMh5ye5H1u4kK47zdm2cOiSSi+uKMmfWNCpO
Wl52XtJKGyFjs3QOmxbid04jK03W6nCbbhLzWkbJ4qot3++zPXv2+fNxTJKJ
pEYUCiX8b/9tdt2mRf+m3I/yP3L6gJ2Lu5i37SJNp6uekIFLazgESeSCyxXp
Hi1EGfgetaylkagFW/LsZU8IFXhUJ42oJUgww2KEUe07Ai7eyFJuHdSCObdX
Fa90k+ACVs8z4uAX8OvmsZAw+iy4fvRGTKRgAXzSuZ8a4vMNzOZ0rJWwV8Ba
8znWUPAqOF1jOufp+wNcUaWXq9jr4LzADRGLvwGOIw29aq/fYANNcEkUuQVm
+tWn5XAo/tt21ltfTyF2gCvn3e2Ex4zABrFPuYBDBQ8fn6k7EWgMvkDIDvgK
d4Jn7ywmRIbuAn8KNuNLoneDu9KdVgpPm4AlKit6t4AGzohuJL9G0cGZUg++
W4Qp+LPuTJIkgQE2T46be5psBuaej+KZJO4Bk53LR8Rpe8EOavX6NNccHKDM
VLBa0Uzh5tKElwV4xsngXdeOvqJ8H6H3scS/Vx2EHi/QAm6c3MCxAp9rleYJ
u9ApiQvJTd77wOyBQIdcEv2OW0jTBe0Hp2pDxwP70D2e2iw3gTWY9nLKwBxA
e4t0nSUBTLBNdSNfPohetZ1ruxVkA3bNn3zbHIKOnf8wMyZA93aTdkfD0QXx
D4qWotG2Nf6J4stonmOleUAxOqNIQcgU6IbveSGPS9EmmtSbvyrQo0n82bYq
9MWGRZKlRD9kTI2fUqGHrmnXctrQh4P7iYkO9M/pR5X3e9FsYWl7nxod/zx/
eFmDVt9No4YNoleWJPbZQ2iXmFifpjfos6Qw6uMwuvhQkMx4BP0HvwMKww==

             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwViXs0lGkcgK3Luodx+0wbn8nImS+rzIjJ8v4wNDaXjWxpK4t0VdPaUiiX
QaIhl1PqKJeW1a40JRy3fC86pAzdm6SiskQpFhWZ2faP5zznOY91hCgoSlVF
RcX/K/87vnTBqGMh2f15x7GyLycEkKzTuYS9PAzNrV0esjddAJntjbZDlAhx
GDHlg4kCyCnmUjSVhGQfxOm9vwkgV7Lf/jJ1EtU9Bnn3BgHkqZ28XEGVIP+j
ftGuNgJgIEtRGSVFu5VNqiq0F9wbiAosoWiU1lyD8Lwn6Bnd0Tvndgfx+M1S
HOMBWXNx1QpSjlop/g42G4ArnpbcGHiBMvRVQ25OuUEG6/olinyNbnXV9q8o
doWbVU98/HRG0eEg5czH83y4cC9hQ7DwLdIPbtDsOe8MvjYdaj78DyhpurRP
InMCDrduJpszhZ4UlFSuduWB3HCM1e09jfofXlPMljvC/nbdMQe3WTSQm8fW
9loJ+UVDyVLOJ2SSsaxMMecAKV5zQSzPOdTtOp+6EGkPm2hlK3b6ggSJg1v8
LSlQagu3BwUrkFC2YsCzxw7M3S/sS+SqQIf1GcWpP23BZsjs0C7qG+AqC1hL
22ygcHz5kgAXVWh3N4ktkrFAGcbPFXLVoKDEdj6eYQ0y15HSH7zUIWp7ekxG
viX8Soks3AI0wOysQ7K+62IYTXu3NXjNt6B7PFsrGhHw2FvfMzJEE8p6Mxe3
sk2haf/SqePrtKDzvWMlsZUBkVJjnWahNvRSuIaTYAAxIRX0P+t1wI9hHBo3
rw2xUfaedoG64MLRaJjU0IDBgZ8jIrfqQW1+RVrxH0pkuHPT2N879WFa48S2
2pYZxNuyHmmFL4L6aHJ8MvUNohvfrwzbZwDSnoNQ5XgLWWH8aZhnCBP2P9pf
ET2kPapjJawrhjCbc2RS4j1OmwcsTDx1MgJLcX3c6+hZemSp0rm0xgjEvru8
mbEKenf13cAhPgPKWmQti1LU8OgeqwD7BgY8cmK+2BOtiYW8TclKrjGoyjSf
h/N08S9XolICmoyhYjy2UtXdAO8Kf7vzorMJNHrQgy7xRpjT6WWVRJvApIUi
a/KgMe7lHdceEJgCe67NOC3cFEfL1/R7tZnCCcmKPmRrjq87yOPshGaw+mxO
AlPXAmu3vFKad5rBgVPW6utuMbFz0EBjtoc5OO4pXdWX8B0mzlV4JneZg0Gg
B7PDzxJPM8euHhUQwOkqbKr5bIVtU1/0VPkQQKZHXMpTIXHo+IORJ0ICXtkN
9/iqk7i1mV6yyp8AooovbtQlccbmU5kTIQRYqO5tPc0kMbMYwsN2EJA9szFJ
6EJiZF1o6JFFQE3BSqfM30kckymhRBIC/r37rN71EInLJ1N8zucQ0PTAR2ci
nsRa7dFHPucTcFRro22QmMT3IjxHrxYR0CCs5RJ5JN5W/o5mVRMQMmJfUXSZ
xKf1XvX/JCXA16rSa20NibsPyGcSrxLwl1hxba6OxN97d1BP6wjIEQfqhF4n
8cfhM4UFrQTII6TZxj0k5gTk1LRhAnIZgc1tfSTeXJ8qe9/+tV8+bRLdJzE+
tk/Nr4uAJI0bDrf7STw1EWkZ303A/WesisPPSczeEMq/eJsANHTwLfsliTfS
Aesfyb7+zlaN+8MkzlomEKnfIeAzKD8kvSHxf2c5LmM=
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwVjn0803kcwLGUYdfQ2g83j/Nwm4iZ9Zv4fmyjkebCInk4xpG80HM6h11S
OkTPd1K74s5dieq46Grf6Mj1cFoPVI5cOktSLT3wip374/16v97/vR1TciLT
jAwMDFbM8r+3q6YtOqaLAp07h09+/FYCRaadLBePJKTwooT+tVMCpe2trkPc
HHQ72HvgZKEEKo7xuGpuIWpaM7AxcqMEKstyF53h7kUz09c8u+IkUEXZe6aO
exyZh1elmnMkYInscn7gNiKG/0baTLcYNP1pEce5asSTaMzF88VgbtFjfjSg
ByW88Y81qAqCPVN5DTMOfWhx/eKaJxIA3jcTZVf7B5EjupPl5hYIu5wuneY6
DCPDyEB5zQV/uHbqQUi4qRZpKq+yjhwg4YTmq5go6RiqHyxRpKcIIJTdQQkh
XyEPed4z7So+cHjNb8s5OoTImHX8nTzoo486dQdPoBKTvTrRCW/IbTcb9Qp4
hxyV+5WGw16wr3qoqJHzAV2XgGL8vAcoxVORTqIp9IbZaLoq8TOIU+svY/5H
RBttC5uJdwU9VfplZNQMEnsG0rV8Z2AGnsgu4BlAPvVuTZSfA7CHFm5dyzWE
f3za1sunbeDwcw+WbIkROG82oLcAA/RJZKWUR4EzK4xIrQkdbvqPqJaK58AN
jZwSRjWGL7g51gEyY3DdTEuMH5tA2uIXiVHL5oK2K9Tsva4V9QbTRAr5PLC4
eH+IPqBTt+U663avNAGHMZ/33FtGWNFoZXpRSoUsK6Z+mcYMb5DXqf+NNoXa
I2G1bc2WeEvaIpF7hBncW05jB9gy8eP+VSmKRHPIPt1sw+i2xfSMuNFfMmgQ
TrtW9YeLA/ZNiEYmyZ/AW/b6qrt+Tljd+tI7KXs+xBwbKa7JZGN7jD889aVD
+xYX1W85rjioYUuZUxMdVor5DHaKO2bKpscf8S2AbVGqLN/MwSPOeoHqnAUU
u9Gqq+I9cGbD7Ygh0hJYP9V+9ybFE2vX2csWXbCEdPDTGtovxlLfuCI9zwoO
tGzj/0zxxmua0pSyNiv428Q4/NU7b7w2eSyjXrAAzld/qim+54M5nWL7QvUC
4Kd8eHD7Cg/f8t1N7ZcwQOCaWXin1hdn9S17KL7CgJd37ObZbuLjS159ee7S
hdBck6DQRfhh6u9P9MzOhTD30tWgCkKABZH9reVBTJi0Dl3a3yfAxNE6UVEX
E3y4Udu/r12CJ2xGz34tIaAlU9XGSiSx647BG6dCCGAtZ01GJJN49fO7Iw+k
BCwvGRxQppL48kU1y28FAcFdPNVwJol3xR8sHZcTEDlpPVW3lcQ2xyA5KZ0A
y3O9pkQViZHjYXrQHgISKqNUrR0k3lBaxs0pI+CGtqDrcSeJa18rQ2oqCLB2
e31w3p8kNmnPyp/cR0Au9ZR7dA+JNSki7dlqAnar81ye9ZM4tfaF2qmBgAUe
v+YbvSPxIfMnDz9vJKCYmk6wJ0ncvanvbcFZAgYKU9cEfySxZ3AH91EzAbEZ
0FtiJMTvnx45vP8yAehF8Y/G84WYI6s4dwXP/oYezGdbCnF8y46bL9sJaNLo
JkUMIcYl2ZTwLgJ6Bw6NFtgKsW5cYbe9mwBju4GEo3ZC7BKzmqy/TkDYnE3b
Wh2FOFYti75/k4CHE7HC+2wh3uMmyZnTM9vR5Sd1bkL8HwcqHys=
             
             "]]}}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 6.203142043379802}, {-26.156046125416516`, 
           56.979441286316565`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"x\"", "\"y\"", "\"z\"", "\"x'\"", "\"y'\"", "\"z'\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.6844547851171913`*^9, 3.6844548166789827`*^9}, {
  3.6844556400848017`*^9, 3.68445565759706*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results with headwind and crosswind", "Subsection",
 CellChangeTimes->{{3.684454870328092*^9, 3.684454876796276*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"windyLeaf", "[", 
  RowBox[{"{", 
   RowBox[{"20", ",", 
    RowBox[{"-", "30"}], ",", "0"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6844556708060503`*^9, 3.684455689394824*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
      "\"Distance travelled: \"","73.60630314181466`","\" meters\""},
      "RowDefault"]},
    {
     TemplateBox[{Graphics3DBox[{{}, {}, {
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          Line3DBox[CompressedData["
1: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
           "]]}}, Axes -> 
        True, AxesLabel -> {
          FormBox["\"x\"", TraditionalForm], 
          FormBox["\"y\"", TraditionalForm], 
          FormBox["\"z\"", TraditionalForm]}, DisplayFunction -> Identity, 
        FaceGridsStyle -> Automatic, ImageSize -> {360., 363.82735107935326`},
         Method -> {}, 
        PlotRange -> {{7.90787647316418*^-14, 58.79033986208551}, {
         5.168791003824373*^-6, 55.07584251704931}, {3.268879933190866*^-6, 
         47.8491933255808}}, PlotRangePadding -> {
          Scaled[0.02], 
          Scaled[0.02], 
          Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
        ViewPoint -> {0.9988281553833984, -2.853971075675317, 
         1.5189441777833939`}, 
        ViewVertical -> {0.06867905840915564, -0.1622236152955887, 
         1.2114522663511995`}],FormBox[
        FormBox[
         TemplateBox[{"\"projectile path\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
Jp01pg==
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
4X8hdy0i
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwV1nk4VWsbBnD2sPa2hczbcIRkSKKSlLLuyF5FE5WhT0qpaKCSqDTJQTKU
KElSMoc0KFKKdBQVGUKSOUqROkXC956/1vW71rqud631vM/9vFqbfRy2ssTE
xATiYmL/XaPEIzZWth+3FIuZ5zeUU28pY+5XUz/sRse8GBUb+3Cb/lDI2MYM
e9Ou5SXTqlrK6H9+3wzZM3yUtkxYa5/TUEtbXOq+vnE4ijZj/ZKJf9FJ+32e
mOM0nETvOeJ9MfHWdzpGPnLUYTiXflLO7dQ9yUZy+poPq4cf0T7m/EAFXXlI
bcq81qZdTVuyAvfrTZ8Kx0JDV2bkLf2vywEEehvi+VXdMIeMD7Sdpjwnz38W
iu8rz5Oc6KSP614aqjCfCx05X/uijo90WUXfo+37zGGwsb6iXKWfrhP1elSm
W6BjpLD4rMYgvd9s8FpfqCVGiu/op08aolvbobXvCPB+ZHbZDp0f9EyTM3yX
W4sRnuf6LVb4k37lcyKytsAKrFM6C3tZw3S18lmOwmVrLGvxudun9JvucTBf
13h4CZwztpXa8/7QbLOHtXPm2MDsa9vYdq1x2sxePUC3zQYtqxaPZhiM0yt0
S6wvdtjgZP7V4b5Z47TniNwxQbcNqvdv/r7TapwuVEuw6e2zwc7Rzl6fLeT5
/ELls99tkMz/WOufOk7ve5vw5wIlgmDql8xQgwk6XmZIL9BQhIHsP1m1QjFs
/7HuScYeEe7Mqft5Q10MzNzxfXH7RAh4kG0VoimGwR5h7fH9IrAq1zeb64vh
0Y+FV9YEiKD06b5E0jwxpKzftLPvmAiW+n6eno5iWFUz8L0+SoSI61+mjZ0T
Q9utwBe3s0XQv9yarCsjjun5caHh7SK0GcovWyMvjvVzBiJEnSJcLGK+HVMW
R/VYt4x4N3nfxpuLm6aII8JgQ/TeXhH65U52nDYRx7rrtgcxIMLNMD2db/bi
MAq/O+X8HxHM9+9JfxArDhkJ614tJQaDrNRVvfHi0KtY8DNHmUHm2aZfCpfF
wcQg1FyFgWqe1VLvVHH0+2nOWabO4E+fQp9mgTjeRtcXOGszeLyxcHrIW3G8
tqXOmcxksNSOlbtalQWNBvWyp0sYDJm4TTXTYGFvyoU1AhGDRKWieDVtFu6b
FSWuZMj67XtP9hiw8K/9YZfaZQziA9qdA+ezcCX09PGXKxn0pT5mZziz0LTh
9tVgZwbhYsdcJs6z8Dj5pMLEDgamPc2vuhJYEK/xHVHbxaC10mzJiyQWmE1/
XZq3m8HsC19nxqWx8MNEXXGnD4NmIzeOYQEL0RHWH0t9GRj+b1GeYz0LXsOD
U8wCGVTdHeXkyrPxJjj6kWEEgx3X7jT0KLOx1UD5vWkkA3707owp6mwsWJMZ
vDCKgbXnB7uzOmzMCjjlw5xhUKRaFrN/LhtSkoH37WIZpB8L17RwYmO3nMp8
6UQGQctUFlYksCHjpsYKzGKgafZGSvwKG9nNBRGO2QweaZ/+MD+FjSdGeqnG
NxiMjP4Jys5m494+9ePvcxjsyW17HlXMxvHkvR16+Qw2yGc4rWtlY6WN+0H/
ewzM35v5dmhx8CKkcohVxuAvyuACT5eDB2FNbjeIWcZqD2ZM56BiTeiOtU8Z
vDw+wfKfzcGvj7buyeUMNutUxEhac+C1cEa1XgWDiJ0ut0w9OFC7y6v5UcVg
b6xdg4snB+YmYkzYSwaODxf9PrqLg8ebCtxUXzHQktG2er6fgxl/2n0XvGZQ
cOtTzYa/OXBIazXfUcOgbeTwt5A0DiRyztqG1TMo1/ZWvJHFwXQ5fj+3gUGW
3ab5NbkclKqvnhVE7Hd5yQm1exz0VjSmH3jLQLBYSvbmPxykDG5ZuqqJ1D8s
yaSplzxfPuZb0sJAJf/M2vF+st6CXne99wzGm4ICpn7j4Ehi7r+RxM8Ntz/e
PcLBs72rZZxaGbi9Nl7NEnChYu8j3fSBwSmlJz6GhlzYTp/jnNjBYNP55k0S
xlxY7NOe10dspvTD/uNsLto9oj6ZdjLoUtQzTVnARZ6X9esKYihGDqvacqFr
PxTT0cVAOS6tb3gFFw5HLwh1uxl8VXjc3GDPxVBXiK8n8SWF78UxLlzMSs3K
7CP+Ke9yQuDFhb5XtUprD6nPuX37endxcZcfs1z4kcF1+Ygtz/Zw4fnEa509
sYN8iU1QABfU4OO+EuIcuWmC36FclHx5MyW6l0FwjOXo29NcBJkIqMfE6+Wc
++9GczG9XKtsgJgvd/rV3gtcbAl2LLXrY+Ah+y2mL42LefZxb/8ltjgrCP4n
i4tAJsr/r08M5GR1/FJzuWDpmwxYE5dMdnJyL+Ci6uCbrZHE58/sWUoXcSF8
ytl6k3jX5PD5fz3ioijLeuEbYtXJD9Waysn9Qltfuc8MvkU3TLr3nAuJ0CW1
JsQVMoNjsS+5KF2UK7mS+IDM1LbV9VxE7zKl/iZeEb2wZmYTF3ucgyqSiHVk
HEsnvefinkLKlnvENdKnrld0cWF5tUSnmzgj6lpcWi8XS2/32/4mPipdHBLc
z4WLyipb6X4G66Lq/TcPclHtMaGtRTxDesATP7ho1VSqn03MjuKv1xjmIuRN
9iZr4mYpbbs/o1xcH24sdyDOj7RY2DzBRb9kAcedOExqndF9NoWho//7y5t4
Y6S3xnkeBf1H7TKHiM2kwmT2S1LoMXZvCSaeFHlVzEGGwg7ToaAo4s5JD74Z
y1NonZbDvkBcFFHXIaVMwck5yy2J+Mykr7WfVcl9FVbsdeLtEbzy5xoUfG5V
pWQSW07SKkjXpjC+RTsqh5h/7gK7SZfCM+edJ24S16pI2wsMKUTUj6jdIk5K
Dk6yMKbw9Ub/hv/sqTf6edccCjaZm5l84tm5e+cnzaOQHXGoMZd4zLQ35LUF
BZbsGtls4ooHbnVioPDzo2AolTjGql5r9hIKvAePD10hdn1u57NlKYUQw3PZ
/32P3urS4tjlFJLfJAf/971DDeaCZ6spuC/mU//9j+INeU6/1lJ4INZrHEAc
0jUtVd+Fwt9n3Vg7iVfvTBxy2UAhdFf4EVdi1SE5nHancJgVfnU5cXfAqcji
rRTkig97WxDfnJho/uJFYXTkSJc+8aGQA/pTvCl0KeSxFYmlY7eUnThA4bK6
smUf2R+Nqs2Tbx+iMBYT7lJDnHJ1tVvXUQr7R1I17hOb5y0aEYVS0HBYkXaC
mGV2RxRwmiL7SNHLg/hl8fTYzGgKd1eO19sQb36hbDwpnkLMxcxcDnFE9zeP
mgwKEg55bvtIPzju8rzFyqFQ1VbmZ0us9b11Yk4+haDrvfO0iAvEqhLOF1JQ
ntz88AXpxza1tOr/vaDgmne5Voo465q6RuQrCnZr/ETvSD/7GZzb+egNhfoB
263pxIJ5xymtdxQUPbalWxCbOqxf2POZQkpVPNaSvBhvrD6lPEjqN5agpEz8
fCPzdukPCia80IuNJH/cdpvuy/5DQYUdk+ZEHBYmnbFHiocXueltNiSv3j0q
lR+dyUPszPVfO0g+xidumtk9m4f/fazUPE+89tD40tdmPCT/XGC0lLhq7oKj
KZY8JBj41GW0k3rfyO+1W8nDU/0nbq5t5HyQkPwwcTcPvlOD/SNIXjsHWDaG
7OXhsOqztUbECo4tQ3v8eJi86LDUS5L3EbJCfZsjPIQ/viQrQRwYFh3zJYKH
1w8XbfdtJvvvwNHtljd4mH3Q1FWWzA/hWvUg/Zs8mG8LHL1C5kvdrKJEuTs8
xClk+BsRL//yb03PAx7W6VE8GzKfFnrsXhhdSd5H3zV4Wy0DdQdX2bZPPPBF
TlK+ZL61GC14cMKAj/tdZT9vPSP1YWT1nY34oEet7DWJO917Y2fO4uNGRs75
CDJfP8Wd935nzse51Isd7mT+jowNac1dyoe6ldKJiScMlF5lh/Vu4+Peva5P
1EMGq7z/clx1nQ+X6VJs5hbJ+7AfpdMy+JgSvaLzLJn/jtcqjf9k8yHuOjn/
3U1Sr4aDEpm3+Ygb8lbclUfy17KhmFXGx6szlezj5DwRJh09taCdjxj3mrD9
aQxKc8W+qU+RQItjwZMzFxkUvjYtEk2VwKH1ufrp8aR/Bj1P7tGTIOeq2FXF
FxhcmV2j+NRYAq/ex7zviCP/u+Dqgp2QQFuX2phmDMm3R1bBhe4SiK47u8k9
nJwnXwYrO16XQJ5BiNf3gyS/+vmW0QYClGnb/HJfx+Cgh0fdXiMBvGuXyViu
Jf3SUrJj7SwBtmeMKqqsYTCn6sAFlfkCnL5xd6ByNYOG7K7BlKUC+LVlNegs
J/XY+Tjl/nYB7Ba9PJliRdbr85foSBUgKbW9s46cR0t7eupMtSUhywQMS3JI
3m298s8OXUkEx7nrhLAYHO5yKkqeLgm55M8KE2KkPzoqrkyaI4mCQ1ZLvoyJ
kPo+a0eXtSTub0tqLfolQlidt1jsVkl8SlBTVvsswsrSn4bfMyRhIl1pOVgt
wrvL1Ml840loEQoThuJFaN7mV2JlLoXDbeZao+oiLOovtOEZS6Nlnl5oY7wN
Qmei89oCGegsybRs+bUEl5RWdpurTkbYwMC7xfZL0JU0NTkrdjKmWEWXdydZ
4yo3oSdURRaOS6ZceVVlhTO2ozVH42QR7vVo4u+Rxfi+e2xpu5ocxrLZ1tqc
xQjz+eSx4aIcpDe2LfosA0z+Pf7PFgV52OiZNCyYZgnJLXcK6i/Ko606ftr8
dgvMz1pr666kAKl1iQtq0uej+XWcl/NlBXCGxS2eac6D99Hx101ailDa2Jz4
ItQUppIO7/ZfVkR+ifjVAPHZ8D4g2nd4qhLqfN/519rPRHPJtNxLyUo45tgv
G/BKH/NjZswSqSnjbud6U3XzqZC0rqNdk5Wh6el6efonFci82fb9tLoQWcGV
7A2Fkqjzuu9foCFEZk1D+LTlkogXF/xp0xQi8pnjirZWATRn5XDMpglx80pM
+AyOACZnviu2GQkR8lNSRnMlHw4rj5ub0kJMjjoftv8DB3EvLh5pcRdiR/VW
7oOBUXr95s/iPA8hej8/vtImO0pr/F4YMmubEGVD3dKf5/ym0wzaokJ2CHH9
+jL/XP9huiBMN9nEV4i90QmlA2M/6EbR7dLgYCFs+vszHgr66cRWDpMXIoTy
pG6zNLtP9KYDjpVNYUJYKKyqco7opftSR2pnRhLLD+qoS3XTvznobowT4kv6
qi3mwhb6UeJZL3a8EO7nOiyzzzfSQaadX4wShBi9Pzf0lkI9LfAI+RmUJMRb
Q0XVMY0q+tXo20M5yUKkelJPQ4TldMw5g4m314SYsSvd1le7mHY0PHySlSpE
d/zrdU46N2i1siqeUboQTsvDSt7vrLT8P42nTGM=
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwVjXk8lHkAhxnDyMhtvCIZYybjfZFSKeX3rVaGyv2R7ZSkVJtW0bY+VLJo
24So5NhJh6NtdMiRYqPd1uqSNDWSK7poszpmnNv+8XyeP54/Hn5YVMAmlpqa
2oqv/O809V/WN3Xtdw9tZ3sVrKh013eNaW5VriPRnjkzRTPTSEe1p3emcgcJ
KF617jZdQO4MX0reqUwgq6e6VRpZy4hbbu/Z9co0MsAoAm9xaknMu4lZK5UF
pG6RU1+J/B7JND4yEqCUkRbPkjzJ3nYiLQrs8FPWEtlsIvRo6CeTQ0sKO20e
kj5fqat93CgJrqbXeKrkxLdJLzhuLhuNp0WpAcUdpMDfu3lf1iTcqDKby53o
IVUl15S+b/Rga7TL/3r3KzLQlBj/6aYhxOtb//rDvJ8IzxydXaxlgm5V9Y0M
qw9EQAVNdaB4UN0otyvS/Ze43/94oLzbDO2qmQ1bbT+ShO7rm8Ivm+PnsjWD
WdRngjOO3FnfWIB1yHbBa5aS9L5eG7SnwhJez6OuveENkwa3kzu8nKwQUhxR
788ZJTHj41ZX9k7DnPedY5v546TrnXdS7CZr/HNhtLSFUgO/tDQ9XJ0Pu/wX
UpG+Oux8UjZqHeZDsowl85vCwpPvSz0yKBvcvTbClhlrYFFexonJx23g2j5n
VzefDR+nI4XRZgIc4t2KomlNvPhtYu62dAHcdfkVRTZamPGhEEGjArTV1huP
OHLgkuxVtXm7LZ47zK85INaGrDpB79FDW9TL1AYtp03CW+aAyVknIdL7td2P
inUwlRf4Z1OmEPV9fY9dbLhgya80CvqFaMvXOnjZSRdDx7HknpcIioiYusWu
k7GieEtRS6EIC/urPThOerhacXhk75AIKY7oKZyvD8dcftpRyXTk8nx6XacY
QLOWlTWYPR0vCwTS0iwDRAo21Oh2TsdpzVN9KeaGWCnaH1PiaId075HmhGxD
hC/mKnbH2mHouzFJl4URkhZmZtXU2yE16m342hwjVLaN6eVri2EwPH5no4kx
BoVPGj4tE4O7sbyiNccYl27mLLh3TIx5pUHeG3gm8H0iP9jUKobiQXZkSL4J
Us+ta3eztMeOhPEHz/imuHvGaXxtqD1cuAFtu/NN4SFN1Tb49WuPXRodJ+Bh
zMI6U9RtD0WdUJYr5UHTKmTVyDQa8zIZ56UWZuiJmn2zYzUN7pLHZI3UDGEa
o7WGeTT0H0UMHbakYBjxg/0iOY3HkVV7Kqwo3PHjvfR8SuOkus5opzWFW86z
0n2e0bB2vsieI6Rwwfl93eo2GjPSh0w7HSgkB6fEx3TQCPDZ7+pCKCxXOkaf
f0Uj+++c+OcbKEgU9pLxLzRWhb1T54RTaGzLD9RQ0bAaXpDsHEEhwbvMX3uY
xnlxZ1ryVgphhpeFRqM0KlJF0hm7KNyP9XIQqjF4uvRqfVIShYjKYzUSbQZ5
L9ieZckUOgJDBpdPYhAaG9z0LJXCtq2N5v46DN6cU7U4HqHACS9f/K0ug2E2
ep9mU+jpuv1xiwGD2ryMSI2TFLhl7N+3GzJIdOkZcDhFIfjEl/idRgx0wpM/
JxZQuP1J1bzHhMH9EfmPF6UU9nG4W+JMGWQeE0/ICymkbnv0IYHHIJiOO8g6
9/U34Lc90YyBRcNdjkMRBbPgFMVPFIP/AE0TFB0=
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwVxX0803kcAHDTWGfy0JhfeO329ZTREiGmfD+nRdGDVLhOksTl9Qq1o1cq
CYlrpLFK4lbnoQj1Iq9UZ9846UGR5SrEUCGuh9PDzOLu/ni/3igyPmiXtpaW
1rr//H8uTbz94WCqt4GDVKY5IQRDj8Qn3apwnNQUHu13TAgDjX7+ElUcznS6
/rwgRQht6quZCaoUfCP0fsCyvULwKnpdul2Vi/cGuusWBwshcXx2aYiqBNuN
lbqNIiFIWDnTQaoaPNVVd37fzZUgq9g0EKhqwoPX2uLpkz4wL+LyRaVVJ076
miIxiPwBghsdw/ymnuGMM5wqngHA/Qt2WUGXBnC+15kO75sr4PYNs2XM2WHc
eqsnq+MnL7CZL9p4c2gEd9ecDKna5Am87d33WhdMYFrn+zqjtctgaKrx9inO
B8wISfY5kugGU7fr7Sv0/8Etq8NM6f1L4eWUS0uszSd8VyUd/8vHBX6tDftY
QH3B1v7DMcq+JaCdbbN8VFuFR9Jtqy8vdII1ffHXx9hqnMxnHJ7IXgShl6Kb
NzI0eEuwWHbF2wHc3ym/xaAZ/CjiGFo3shDeV2kqFZQWmB84Z63zhy3YF/fL
7AxpkJeBTe4prGF1gHZNoLk2nN714lRpH4L269P0GtYcyDmt1VHA4YLHS3fR
EKIDnaNzBpdZQjb7Tryjow6M3heUeKxZAN76qKHCShdGszgO+v5s6G1qZk0v
ZkDCURHTh8+CPr7g1lHeXHiUO29D+E4jaK7R+mj5/XdQ4La3Ky2NCXkTc71P
8vTgbn3sWLmWLjS/efPU1YoJVgnOEwF6NOgt1k2/5qQPdZqAUNPqr7gnOlHu
4zEPrK7kTikl43jFROMqhpMBhBe5r3u5QYGPL4bhiwJDWGtf7pCY0iUvYq9/
7WFuBMaNPHZEwlv5qxJrWWWBEezhrDqUL/osv6Bz7s3xBcbgW77wNwunGXme
//STFKkxKFq+JuwwmUMm93xbPWgxH+yjnG69C2SQrPi3UdsK54NXOxUtdmES
I/VM204TFqjKNVvRBwPC3Fnf0F3Igl6Lt9s6k4yJZ+Vm/x1sEzDw0/0yHcAi
PR3S3aHFJlB2QnisGUxJXMpMxwtkCke8n6htbM2IKzOo95diUxiRcwr6hygS
l+S776A1G6zjBb93yc1Jj9y2pkjGBpVkUhCz35J4ShY5+1qYgVHz1hYXxCHM
lU9xmMwMetsJ5/TY98SwK3ryhCUFgcdFYn4blzzdfWN/A4eCsvR3IsUDLjlL
09MouRQ0Kn52PPCYS7jO1XR3Wwq447F6f3ZzyZK8SVMln4JUL6PskFdcErQ+
1cMVU/D4gbk4kYaI9EHh4b4dFIhJ6p0cL0S2Ro7TGFEU6DYN1PIxIhz18kzn
aArUI9Vxj3wQKecpczNjKbhaWbpN3x+Rhiw72RIRBYLkLbSsUESe+9Y1Z2RQ
0B6TEZmUiMj5frpfbSYFrU0bf2QdQCQiKfjhiywKNEsJ9+ohRMbKphSLcyhw
3SdGY+mIqOnw+rmUgnsCt/FQCSJN50/tnnOWgrlF4TGfpIikuQ7/zT9Hwexl
qD9ZiIheVOaXtBIKPm8WkFYZIo+nnyVXyyjQuRRyJKIUEUk+b/bZRQomzDwN
pysQCXY8mK5dRkFn0mC8tAoRi5Z2Br+CAip/0wWnWkT+BRWPLNg=
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwVkX8803kcx5lpMiy/v0zyO84wrNl3yvcti+hy+fFY5aH0Q6tcx13oKifV
JCNCuWtCW7XoFxelxNnn1jl3R0pxkx+ZpCSV4rqZlXN/vB6vP56P5z+vl+O2
lOgdJB0dnbXz+b8LdU8ktA8fDvJvTb6gzecBjZPe1aPeTKzYe3XNL8d4MNQY
FlGiTiZsaylvs7J40Kb5Oedb9SFC+Nu2B4apPAg8O3oxQV1IHIlMm+LE8SD9
9Zz/enUlMRnyk8W0Ow9KzAtmo9U1RFTg/VODbSEgqYoZWqduIVra63kENQSM
t1w+r3J6SMTzdWViUTDwGz3jw2aUhLa/P8QkEOBPqVtudPUQEVdsYtBNC4Lm
O9YB1LkRIkLHNoVfGQguZqlRd5+9JBImfRhx+3HwSOj5o9VmgnBjaIQtvAB4
NtPYXGw/STQzvxOlc5bBTPNN9yqjD8TiscmK/QJ/GJzxu5fkMk300Au5UqEv
5NXGvz+NfSSU2gJmeZUPkEQuy8dIaqLOMiDszX4GhA+k3HplpSHCzRpVm1w9
YEO1QBFF0RK6fuyYODc3YL9Vfdrp+JlYafiG7U9yhndXtVceYzpQG0tbMajv
AO4VTyVuNF0QZke6GFywhdVrSDXrbEkQGXUiy+WtBXTcmiXXmOsBiuF2LviB
BpxBduozRzIYXK5PJR0jg8jq1xRPT33oHkqrv0uZJoKMHBuqnBbA5MYieVn1
VaK/RWE+602BUyVfp3IPTMkHvLhNRzwM4N3fvz/iLNRDihqd93ZLFkKa95o9
3RoqKpowCDrpYQjB5eyyR3IzpHjxopvlRIWDeRHcZro16q9YILzhYwQF8qSm
xXI66hOky1dyjCFK1qC8SHdAKyYaV1F8TKCjWLZpfKkTOu4NI+e5NFAFG2vz
+C7orFXkKMd2EfR6Wp4c5ruh55XOkiunFwGTpLCs57kjqX7Zi+M2pmAT/7ia
FfMFKoqY7TpUagrXTppGyJcx0NQ3n1YP080g5f6YYleAN8pNGU/cJDaDcrG0
x4bCRIs0n9u2W5hDgmC5oOkVE1G332zoEZuDQmut/7LPF+FXYiO2WlmAfT4W
XnbbD/U9KN29ocIChubf/Ffqj5IPfX7wxNESgqXiE15CFmJRo/vTKiwh86FI
MrxuGUreF7o3w9kKqGTlwBJPNuqTu9aclVhBEiNqesMHNsJLGL6hdGuQsYen
E28EIGpINxEvsYY2pCaPZHAQ7ZFgKt8Og6yO22N8Fo66d9/5vsEeg5WZoqrs
AByd0TXUqhwwiNxYQ6vj4sjB9zqZ7YqBg8n7fmowjphFU5YqLwxMl65PbFqL
o+jIwxwWMc9/zGAZ7sRR6V/izIGtGEi/HOgSiHEUt+21LiURg6TRd3dF5Tiy
1yzP8RVg4NrLX3vtHI4ueagKc5IwWBW7JHlShqOGXDcJMxUD/82V59LqcNQb
Wq/IzsbAz2ivYk87jsqfksNqc+Z943bI68TRln389ie5GOzIPLCrqgtHr2Qz
j70LMJhiKOtVShxpyDDaWzrPw8Xcr57jqKW8eLfeGQw6Q6V6SS9xdJQ18sar
DINLdXPp2eM4MkzM+Xi0EoN/ohH/ziSOOmeVB69LMFC0OrV2TeGo5JTHnPI8
BjecBwbGP+KI75khJMkwOJc/UaGnwRH9XgfFq2p+P7tYA7tPOPoPwsIxZA==

             "]]}}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 6.163257840884579}, {-25.988708992514425`, 
           58.79033986208551}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"x\"", "\"y\"", "\"z\"", "\"x'\"", "\"y'\"", "\"z'\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.6844547851171913`*^9, 3.6844548166789827`*^9}, 
   3.684454849103918*^9, {3.6844556819202547`*^9, 3.6844556898518248`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results with strong updraft and tailwind", "Subsection",
 CellChangeTimes->{{3.684455015170545*^9, 3.684455021522468*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"windyLeaf", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "20", ",", "45"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6844557016340237`*^9, 3.6844557305131607`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
      "\"Distance travelled: \"","2797.8149287110705`","\" meters\""},
      "RowDefault"]},
    {
     TemplateBox[{Graphics3DBox[{{{}, {}, {
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Line3DBox[CompressedData["
1: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
ZADxPfGZ/j/IT6VP
            "]]}}}, {
        DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
           FormBox["\"x\"", TraditionalForm], 
           FormBox["\"y\"", TraditionalForm], 
           FormBox["\"z\"", TraditionalForm]}, DisplayFunction :> Identity, 
         FaceGridsStyle -> Automatic, ImageSize -> Medium, Method -> {}, 
         PlotRange -> {{0., 0.}, {0.00011171021426454195`, 
          2797.814874342461}, {2.8963646302434345`*^-6, 127.75781800198969`}},
          PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02], 
           Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"projectile path\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxFznlIEwAUBvCxtNAtIVlNw5wrraVZ22pLCnUTS/Oc25xppXMeGBESZrlS
vOlQ11oaZqbiRc3IE9ty2IJpitWUIv3DKYHN3GwkmEeWHZDvffD4+P3x4KPL
MoVpRAKBEPn3/nWyKX1p6O1gAOF/9qw9TiBbmwM3HOtEfTll6QHbqFELry0G
cF/t+ds6ywcwPWn5Y69lBizmBfzqtizif0eysstix9uwNYHjaB7ZDg7Z0rBK
ZnmAd2ayN6mSvcADxs+enUQfcImn09cxOhN816QVVf9gg+t3zQdTBjnglbnp
3/JkP3A/e2bwAOc42LhFHTc84Q/+xrqurTjKAzPr9kea6vjgqlHNAN0WBD7E
FxjK44PBYd+9bwr7T4DLMs3MraQQMJGhTrJlheLe1qgsg+EU+FLKGvkVKxxs
SLFecKmOAPt769pTzZHg+YNV8nFBNPhT7r7K+hgBmGy3913BMlqoZoRnt8WA
27ofHksVCcG0SeeL6Q4isKjVh7hDh6553+Ogl4nBP2lB4jxqLO43Bm7j6NGt
HtPMmjQJeElZdM/ZNQ4cn3o/o1SPHpc8KyBdOQ3OeMolldPiwdom6Yp2AO31
QsFYkyeAmw/7jnB3nwEHvDF2lE6gqzdTVgvLzoLtm4e6c9jnwBXSws6iWTSj
QE2/oUwEF/OzF/24SeBVerDj+hxa38UfngqVgsnm9YjYMHScq250JBxty+dO
aKLQbpE+syoxOmeWYh8iRbPcvvDar6Jzo1sMXnL0UJEstPYaWjo3GX0rD63o
HUtMKUZbBH251DtobkkOQaFEFz7nlNip0C7uHWULleiT1uaakRq0yl3mHlSL
NsXQGjWP0Jc1D560NKD1VomvWyOaRKN0qprQEuHYEYcWdGOpQpPfiv4DcDAX
8w==
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            
            LineBox[{{2.718430482686184*^-6, 0.00011171021426454195`}, {
             0.04085577589693503, 1.6771715733149706`}, {0.08170883336338737, 
             3.350759300732628}, {0.16341494829629205`, 6.687575173725483}, {
             0.32682717816210144`, 13.320101109180749`}, {0.6536516378937202, 
             26.422514074138654`}, {1.3073005573569576`, 51.98021555822885}, {
             2.6145983962834327`, 100.45034677460131`}, {5.449119719988384, 
             193.26663887840655`}, {8.09580211714241, 266.9461345751655}, {
             9.635470217770026, 304.90037020952866`}}]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
Qt/yjZP5B6tFbH5Og85kqt8h0px/7E4IfKaB9s/3tn7Si4v7Lz2cp0Ggbdhm
81cCudYXK1NE6UhIGl55lrR51r0WW1U6aI+KXV6Tfvvm8+sVG+ho/y2+RXKC
QDSd8vWZHR1Tnh6SIL06RJ8/y4eO7riJb1zSueZ1R2Ui6TCkfmQeJK0sjF/Z
p+gIqpGUjSV9pbslUqmIjtmEyKPRpOlF9tMFd+hoDBPhBZEu2f8iVKOTDv/5
TgVb0lrwHC8boqP+cz9PifSNFR936f2mw3XjrolBsr51bwIH/5FWQ/TMla4C
0pUlX/1MddRQkD5c5kLaKCLi/d1Naog9XX11lpx/7eYFr81sNVSuKfyRTtpU
PPHVwxA1xLuE9siTbuwTdrM7poaUHwJhl8j1RVlm5/McNewZDP8pRdpqa17b
q0dqOHZE/dwHMq9WKTVrzns1JDSfENxAetvHMt7HGXLcQpKaSObLjKlvHFVV
h/NXd6FFsj86t1ma7jNVx3yurK4OaddVrdVTTHUoZCwvYw4S8Lj98uZCjDro
lqe5MWS/9cZ66cSfUYfo+9ChJLIfuQ6fSgSvq4MZLhOS9InAjuGJy2I96vj0
/qH0LrJ/9ylRzlD1NWDImv365C2BybGslcXWGhirnr2YRe6H8Hq5NC1CA3sv
Oe52JPdLlKv6MYNUDbxp05Os7CaQdHJTpNWABrJvzC9X6iSQPRvpFZStCbVf
Hl2VzQQUmn/3fLmliQAlkRkhHoH8rGOu+x9qgv7qCI39gECR7hmH6ClNnDgu
KzNEnge3/G4izUELGqmE6L81BJqffaZVLNGGp+x3ofgSAqXX6r9WyWoj6NjM
+WLyfMpISK+v1dHGrw/8Zg8LyfVYb8JsctNGh9OLhV/5BMYvpUY/K9WGnruO
jvlFAjJ7DTq/OOvg7RZbMZkUAgGUuKNaBbrw+Ol/5HQAgUSa6JcO6jocXxmX
M0ee55m9dS4XfujDaCbHOSmAgzyFsS1SLUbYFFunalbmjbnhd78P+WxAxfzL
c49/euGufn+LjpEZUiZ2tMSZeeHZslL3Rz0bMedkIF553BMTetF1aeuB3C63
CpduD6y7pGnfe8kSPm+sqOOyHjj7vLaZOr4JNeIyXqwdbPxpyeSlsreg8X17
Vn3Bdmyb1kp2vmsF9VfsO6Wf3XEyZGDdCpGtyN95qyXI0B1LNEqJ8TBrUPIz
b2gecENesUMYj2eD5zZV6bVNrgj1+0m5r2cLxXoLlvUiCzy/0eBVF+xw672M
ny+DhY1aDTf9B+xxw526zzbNBWNrzx7qZjqS9+wOrlG7Mz4cVj+T58REWPC0
w7isMyhL1Z7GzjIhEUJN1tvpBOdSDdvw607YkplWGH6Vieu3/zb1d3FGlWTG
EfFhRyi9ldgTsNwFugWHo0x2OMClWHuJTIMLltcVi0QM2SH7v6rlTb4s6ETu
v8hMssUvpU2sGFlXaAY0fNFZug2hzxjiRuQ8GpryLa7mWKNY+d267B1uULjY
RDM234qZjPjTEnLuSBXhdLQ0WoHtfy4wqckdf1Kyo6a3b0G3W3msSMR2REuy
RuhdmxBYZiySqsSG/4pSt6ndlqgr4M7VNbPxK3Pj9m5hgF5/SuPnIQ98KMtF
pPRGFBrothmreOINff5RjLUpLNqf3Urq8cRsu/37Y4z1uCAoNR930guyUQrU
ui2GEChsvR2p7434DnVP9Rg9pHHjKuIHvUFLYG/R/64DjdhS6vEMDqqau3hp
zupIsAyf2mBM4Ow+62yzp1TMU7cIL5L3gvUhQvJDgSyaKi0f9VlzkWyiWx4+
IQTKwKKd6zYupg4f772dKgR3uYbnbbZc3Gz6QJnUEML4UeOeWgcu5raeC97r
swzy9tqDWSwuvrn91tjZKYDIQSmBrVwuIiI6CrZXLYGe/BBuHuTCK2JU/+DE
HOOwYxGPfoiLut95md815hit8b7WOVFc5CSzJkJ8Zhnc4beOKTFc8r+k8UZg
5zTjVHUHxy+BrOdeuoZH1SRjhHnnsGw6F5ZygeZRE0MM48RIvlMZXGjqdMzv
9xlkxNUYJS7N4kIXpjXBnZ8ZqxRvnfx2hvx+J0Xfu+oj46/Rwuy2bC7ign0c
Yyd6GFmKvoqbcrjgZRo8Du18yeh1UrpSm8uFdr2AlV9VJ+NA7cVrRflcFImz
wlMnWhlNo2668le4WM2Z2xVS9YAhoiRVkVXARbS3yf3CiVqGm3OH4fIiLhQW
+NkvJ0oYV5JO1R4t5iJxMtj2s22rxf8AU7Bqaw==
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxFznlIEwAUBvCxtNAtIVlNw5wrraVZ22pLCnUTS/Oc25xppXMeGBESZrlS
vOlQ11oaZqbiRc3IE9ty2IJpitWUIv3DKYHN3GwkmEeWHZDvffD4+P3x4KPL
MoVpRAKBEPn3/nWyKX1p6O1gAOF/9qw9TiBbmwM3HOtEfTll6QHbqFELry0G
cF/t+ds6ywcwPWn5Y69lBizmBfzqtizif0eysstix9uwNYHjaB7ZDg7Z0rBK
ZnmAd2ayN6mSvcADxs+enUQfcImn09cxOhN816QVVf9gg+t3zQdTBjnglbnp
3/JkP3A/e2bwAOc42LhFHTc84Q/+xrqurTjKAzPr9kea6vjgqlHNAN0WBD7E
FxjK44PBYd+9bwr7T4DLMs3MraQQMJGhTrJlheLe1qgsg+EU+FLKGvkVKxxs
SLFecKmOAPt769pTzZHg+YNV8nFBNPhT7r7K+hgBmGy3913BMlqoZoRnt8WA
27ofHksVCcG0SeeL6Q4isKjVh7hDh6553+Ogl4nBP2lB4jxqLO43Bm7j6NGt
HtPMmjQJeElZdM/ZNQ4cn3o/o1SPHpc8KyBdOQ3OeMolldPiwdom6Yp2AO31
QsFYkyeAmw/7jnB3nwEHvDF2lE6gqzdTVgvLzoLtm4e6c9jnwBXSws6iWTSj
QE2/oUwEF/OzF/24SeBVerDj+hxa38UfngqVgsnm9YjYMHScq250JBxty+dO
aKLQbpE+syoxOmeWYh8iRbPcvvDar6Jzo1sMXnL0UJEstPYaWjo3GX0rD63o
HUtMKUZbBH251DtobkkOQaFEFz7nlNip0C7uHWULleiT1uaakRq0yl3mHlSL
NsXQGjWP0Jc1D560NKD1VomvWyOaRKN0qprQEuHYEYcWdGOpQpPfiv4DcDAX
8w==
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwd13k8VF8UAHA7IUl2spaEZJmxL2fsu9msyb4VlTbJGklKIbRRSEIqlaUQ
UklKIkJaKEkRkn6obL973z8zn+/nvTn3vnPOu/eOvP8eehAbCwuLIfrA334f
g+faOlpNrlxy8FpMswDFhTJP/h/FpkIPuSNFEi3ARUDs4eB4tamozK4DBpEW
MCXm9OvZeIvpQb/js8W+FvDg0o6TDeNvTKftSyOGyRYg7zPfd298xJRiM/jQ
4bM5MMFkqWr8P1Nfbo+kYV1zmLrjl1k5zgG2N07tkx6gAFvv3rlgS04I9Xm2
nb2DAiJ/E72kCjmBGmdkMtZMASNKkXKyCxfUKz4UrSqjQNrr4WaXZm5Qej3b
Zx1FAeWZgF9/zvLC7PXbQQ1iFLgroX29QE4QygZDs5c9AOpVDT/8dRSEDhb+
sO1OAC3G5muYMYKgemB3W4sZwFs/xkGePkFI1nspWKEKwFK+n7I3bS2YJe9b
Gl4wBSeD6gGzOSGYaIxzG7AxhR+eZN7RdhFge2bf/uM/Y6g/NjBgMicCU4VW
/t8+G0Pqnbjr5+VEge+/MtuFV8agxNVqY3tQFAZ9xnPDrxuD713X4zdlxMCl
sORrlI8xvOGO4ti/VxyyRkaqnbuMoKG6fnlFVAoy9/WpBD01hJND3q/cKVJQ
5bFZNafGEDx42fPvhknBATJd9+M1Q5jzsTcOaJYCVW+KW2OKIWjwfYhp3SEN
U94THdW2hnDNb+nPqYb1cGL6gFvkGwOw5i78y68pB1u0frm/XNSHUWrr6k5L
OTB4eiTZd1ofUnIn5M94ygHtr9E5vhF9aNmibyeSLAcx9Z+4S9r1wYzZnbu+
Xw6aTYoZY3n6YHSFw0g9Th4mbm9SygJ9eD+uQp0+Iw+1Bj3bUsn6EE2iBVaW
yAM5IuFZtoo+1D27fEqnSx6OHCjoGBPWB50pnY8migrQ2jkUnDGuBxqGO+Kd
nyvAzR3MVaUX9aAzOSNr7aACHOWo/DKcoQe7X9WU9MwowHGxZCmtFD245cfW
6SatCD6Vlqq8+/VAJTVP1nePIrwbe51w2VEPNvZ2NEeIbADbydwSHS49kNyj
xZ7ltxEMVptO+yXrwmWjugTRqI0wuMHmt2qsLsjxwmJu+ka4f0vCj+eALmy8
5jh79cFGoBznnpgP0AWN96HfakSUINBjquuWhS5YWhe0DzxXgoTwkWGXVbrQ
Jqxk4/1JCazdU0fJbLpgN3yzZXhOCVaOuykqLeigvq5v/KG4CWL+SD7WmdQB
z6re20txm8DX7O2McLcORMjy58hrKYO1IOVuWb4OzExkCZbYKEPOav2p2As6
cLBe4rSKjzJ0hyn4+WTpQLTLphTtU8qQkdiy2ylFB46lmUVZjirD4uXRwde7
dSB3PsprR+5muHb0YSDTTAeedn7dcJdNFfJS1vIfmyFD+fX6n9ViqsAMXlTU
nSJD5tGM+lo1VTCuoxXOjJHBU1ef2uyqCqELxw8d+0yGqfxTMZ3lqrC0TyFR
/DUZRHdrd0/S1UCNd+Xwl7tkWLDmufwrRA0Mq0q+K1SQ4ZP8x5DZWDV4sXEy
c2c5Gq83ZWmxRA3C+v1shK6SwcT4nTL/ghooXXwc8SiHDMH8iQkqV7dATAcX
Z+ZhMtiPutip126Bq5yLcvaRZNBoVhHR6tgC+zSGd63eT4Z/+9+U689vgWah
Vq/ScDKkv9/UZ2OvDqtCo76q+5LhfvkrtZDf6hBO2l2bYEOG5A0Ck6/lNeDZ
52ahZ+vJENpTxkXeogEaV89XiUmRwSHJXO6Cngaof6c93i1OBpFPUQxvZw3Q
yeie2LqODCV5X+rGYzWgWE+qd5GHDM+E6lLY32pA4ptct+pZEtx8xCgM/qIB
OY1srEG/SZAZMVX3fEoDDse2k6R+kcD9leJkBqcmTKz7w3VhggTfT6QzpLU1
oVc6d+L1FxLwsgbKkdM1wef0uzeGPSSYur2sf+GiJuwWuaVv+poE3d4XGQvF
muBKZwm07iRBXsOrlEcPNIHvUsv7oHYSqEXpTzqOaYKNcJPsuyckcPopUB9s
oQUFVqKnz9WQ4MzHOsaFf1qgt9v8rPglEmSVxJu3cmrDL28Ft9Jc5D3m2v8J
akOP79ZE/YvIrB1C1E3asC/t7WTIOeSNn15zM7VB5EC640QmCXJ2cVEP3dIG
5qYbSadSkHXaTa/VagNXl8sWp2PIKxlbe55ow1tjtzahZBKcPSOxZus7bZBp
aagqTiTBuRq1V6NcKK6dTNF4LAkuLNEdXH1JoK81Lfd3P3KrmFFyGAm298ZX
j+5DzvigWhlJgv6qT119e0lwUT6YT+A0CSJfmp1q2kOCXMvDL57WkSC+NnXH
DfS7S6cLbMiobsKk8hezASQoWD9hIdxKhqJC1s3KriTomuh/n9hFhvD6pK87
XEjA1vBk3893ZKiY/2t5i0mCQM+8whc/ybBjcduIHoMEKuftFo9I6IBcf612
AJUE9wSvV02G64DaiRopVntUz6Ecu22HdOBzfkHkNjsSSNw+8rktUQekPuma
3rclQayj+5riczqgemaKf78NCSgnucM8m3Xg5stNFguWJHjJHqzwbJ0u6MQ/
SrSnkGC5m1ZHktGFbU47HB4ACbYWGVOLlHXh7UySixpyFojExxnrgrPyanEh
UxK4xbUMaIfognTIS6EJIxIMzymcKazXhcXQ9+f69UjwZ2xo5bCfHqgeXXkY
o0kCqYWFF23hemDKdtyaE9mEX/ycWJQe9H4qHM/QIEGyOlWtJl0PWj7ORZVt
JcHa/c3u0w/04HTfrV2jW1A+FgvvBovqg+u2lynZKiRwXN0YWyOvD5rPBc9v
QY6QGbDm2KIPxSGueW2bUb5g7eAVc31ILHsXyYpsdiyR92OEPnQ3FRvGbyLB
NgH/AAbaZwb1AsWKNqA6ysarF/XpwxDLhJ8dcpFG7t/pz/qwPnZf/G9FlG96
d0b6H30gKVdutEE+cN6s4flGA3jVPDj3T54Ep+QUReCIAcweF2c/JkuCJq2R
VjWyIeiENZfKSJFAyG6T/gNTQ3CJuMcxLEmCYL+dN2ztDMGMbDx2DXlN5nRG
sI8haHuYWmxF9p1cdC88YQjvtTLlbSRQv5SJ/Fg3aAhXLc/HnxEjgetD9+1F
3w3h4XXjl17I5X15nRq/DcHfsipDGZnBqVDtyGMEv2p/7n8kSoJif/W441pG
cH5L3Nk/IiSwWm+9ZiHFCD6az/nHCKN+Jp1MPHHGCDqtN553RJ6y7/gtdskI
qKR7mnLI56MZb0l3jaAsfde51nUoH/0+V3a/N4KF7Kec4sgns6K0h7caw1a7
400v15Kgk7vc7flbY2j8VsQWtYYEoC9WqPDFGBpSGiVcke/sTP4eM2kMpqwW
MSTkzA7vw+psJrC+ZllyRoAE9Ox1edmqJrDY+7s+AvmNTNzg9ngTgLTP09Gr
SWBBHVe6n2oCyVd7ArYjVye67RHMNgEb1ZtigHx2RJPlSakJkD91m3Ihu5aP
yiu/NgHG9bnEs/wkeEumBs0omsL9HgHaQz4S2IQ03rJXN4WA6V2Z15BrL6jM
FeuZQu4PN55TyBcXOI67OZpCRf9QgQey56O6soZIU9DsFfCd5yXBBwfFiZTn
puCw277WCHlaM6butC5AxWuZ7h88JLjy4/m8ijHAnMCbvD5k+jVxnTZ0Lsx9
wX3hEXK1+L1KNnRuNBaUULqAHLUyfeNQIEDjwkSaNTJLR3C+3xn0+MeKhW9z
k+BuSs2H5XMAlqySnZeQ/YFD6tIlgNePJGpOIrdUXTnfVwrwNd2ALQQ5NfdD
pn0TQHSw4jl5ZMFQ+lHyDwC2/BbrfLQuPpK/8qh7GsDFTjgtHXnf+58re+YA
mhSf/Y5HfuN0OraclQKW30RJvsgXyG0HZcUpkJy8L2QDshy7SegqSwpo1Y45
VXGSQCN/s+PHfAp0yp/+8Z2DBP/e8flIFlNg11gI1yDyE7GpCLfrFIg8HKjf
g+x6pjLndRUFau68GG1Ejk02/PC0jQJfPco9cpCf73QMq5ihwEue5UOWyFml
W+N+zFPgvUfCkiGy18jaDOUlCnzUEL6ghTy9va+yiNsMOHkq+OSQRWk+/85J
m6G+XxxdYEf50t17IsHKDMLeFVvdR1Y7wMhrsDcDu28x3LeRZ++Qb/2lmgGF
cvNdCXKqyr+u/dvMoIYeef8c8u31R8VDI8xAPUbZ6hDyIvvZUmquGRhsdss2
RD7bVftUfsoMgha+znayof1YvWpv528zUDUu1nqOLHnq1vq4v2ZQeLYi4TFy
vnXRwbcc5lCXs2Jbg1zWlLYxQ8ocepUU8vKQG256H1u0MQerK+oCYcjxvB6a
5U7msMp9r3EQMiWU8dGNaQ79cDfaB7lV0YZc5WMOC9tuyTCRO3M1v+6INIeS
uh98JsjDqRyW/VfN4fzZZKYwcvHo8nTydXPwKvzFWIMcYvH3ktZtc2BT4PHh
RZ5YmfzvdL05XJ36c54FeTayv9jitTmkt13PmWQlAU9QOUflsjmwi0dVP0fe
SqG2nPKwgP0a06knkFlu+ryX9bGA0Nzg78eQu0T3zFQGWkCGTzY1CTli4rTc
wB4LEGDdaxCDXHm+PXZjigXUpx6N2IWsM2VFbqq0gAS9izQGMpeHqwOt1gJ0
fj3YSkXufxIUMNJoAUlcgSKOyFEXk8/wPreAsV3b5q2Q6yweT7oOWYD+rZl1
hshGecYlP/kswe+TeM4GZH4ux8aktZZQ+Jf1szzyxwivNyJiljDop0SSRY63
imEzUrAEwVqOSQnk5l+13ql6lqBa+a5sDbK5DUlMPsgSjJ0lbRdZSGA3q5JK
b7IEyw9GRweQtb907Dv2xBLCdqQW9SNLv47YXttmCexjYq29yFM372nJ9FjC
zwZdyW7krECzj2PfLOHr+e9zL5Df9XhoJa61gv5PsrsakZ88WpSuFrWCkAjP
lw+Qb94u4P4mZQW35NZtrUeOT/v6wUHJCh586lu+h6xgvve4uKEVLMg/bL2D
vLMy9cPtQCtIepr1uxiZUaj6bHiHFZxe/fD4VWSj9Fd3RfZYwb4oVdkiZIGd
wsdjDlvB9bXdbgXIlfKFmtbpVvDmxdTUReR/mfdTBu9bQdu2HdczkNP2jGqs
5rOGE7sPS8Qhh8dfqbkjaA2G/DlTMchOp70MmKLW0Oia1xqNLHSj2zxP3hrt
0/SEKOTc0SbXzXrW0EoeWnsAuWz7+VjLIGsICIu+G4Z8MpzOOrbTGppvm9zZ
iePHrE45FWEN2cIud3cga1w8mtETYw2FaiH1Icj33+wp8suyhqP/Or8FILfa
27TFPbSGO60bbnvh+J7sjvJPrcGTj7d7G46/o+l1ywtr2FHKM++J53uc9J6v
zxruzW+x9kDufSw3dXHCGqKf6K64II/o/113T8IGcvvb2pyR2ZTLfab220D3
ZHiFBfJi3Z/7modtQMtdVhR73t5a8GC8DewiKSWYI0/sGWleSLUBsYm1LmbI
ffdlFFbl20BBaNEaQL5unT2i2GYDZnGeDwyRiwc+G4V02ADnVDUZOz9M42x5
tw0susvfNcD9k9FhqfnRBtrMNW/oI8f2c5eazNhA8FfaTV1kakjsDg9pW/jq
Tv+qjfv174tHl+RtgbxSuhfbMk1C8pOSLTBUWFe0kA1u33sRrGkLpi5V0tgb
5qdVD1jZwvyNVwEayH9SgqbSI2xhj1qbzBbkghKn/S0ttjA3nKW/Cc/HoyYo
6oUtdMW/eqeEnMIv7a7WZQvOW2ZiscP3jRnlvLeFXNWJJxvxeCbJXIEzttAY
QvHagPymt+4iu5wdjN/pqpJHfpYqd+r+RjvQyGb4Y9cbHo8PU7WDA/6X12Jf
ucIM6NGxAw/zI/vkkHfv+ql21dEOQvvdjWWReTg3NpvF2IFyTcesNPLC/bTK
uSN2YPJl/jb21M6Z4vIUFD+2fSd2b9fDE0JZdnDfOWhYCrnokidjuMwOrp2W
HpDE7wspczSxzw4WfdK/iCPvDVjgf6RpDzZRLAEiyPsUD+301LUHcW4TDewD
X2ae/Tayh2bm7yVh5MiA8SQlG3u4OP8oFzs2YOBPmrc9sNu+H1iH8xVwf8Q1
DbnBbJcQ8nFFbbPpTHtQm06nYKd+qSg4cc4eBIcpothpASWeDVfsIePH2+a1
yJkBZ7vka+3hzesaSezcgP0NEyP2sI1++NMa5DzFnxIp4/ZQ/627HvvSl52H
ZKfR/XtTzmIXBPhr0RfsoY3/jz12cQCt7P5aB3RAmGwQQL4dsDUnycQBJkUD
KlYjtwT8CBO/4ACXzod28CEPlvy7RLvsAFO74qqw/4ytenWyyAFqN7dexFaL
UNZYuukAmk9/BmNnxwb99/mRA1ytSGfH9j87FHvjhwOwrc205MX5eTt1a2Ta
AST25Ktjn5NaHlw/5wA7m96JYb+4Ik3JZHEES43B8VXImhUenAdFHEHQXSob
m+VZz2kTU0eokGWb5EGW5P3SdMjCEcZVtAewSY4zP+/YOoJzQP5T7NAeQboi
0xHeek7lY3cOOYry7HAELxBkYOf/eZb/OssRls4rP+ZGNlZpuB046ggzo/+a
uPD7lv4lWmDCEUpPfq/A9p/htar95Qhs2hwF2Kn1Hh/4lhwhyvFxAna33TxP
1TonGDYyMccODdPyZ6U4Aa+hyGtO5JhOjy03rJzgMbvrE+x07cQ/TAcn9P+t
oga7aqEzvczNCfreX8rFXk7b9cB5txN4f9cNws65WSacn+cEcb/zljmQSwW7
hqyvOAHnX9sZ7PoD8+W/SpygJFV8FHvIyIpiWekESUclX2GrdHzZNdHmBPtL
HxdgN0/KPDOYc4I1jV222D00q6yRBScwi75jij1as2t7OqsznN1zl4zNF9/w
+zO/M1QfXqeA7SrgKXdC0Rl0ffUX2fF6qH72cD/VGUa2NlVji4tSxeVdncHj
aNFNbPMl3vs7tznD7NipYuzc9iP/LQU5Q+dSeA62dWj4ng0xzvDpa80B7KIr
5kF7rznDbxlJPeyO1GX2B+XO4CfYqYH9Z09dEccdZzC8kbMZ29lk66fz9c7A
5UyXwl58J7mtqdMZGp0urrAhuwnPUPn+ofEjXdqxkxZu/mSuOMOedrGnxPVf
2tbObFRYpIw3EdffTn29wE0FyqOmSuyBkkBFNSEqPJaRzcNOMafm0zdR4QH9
4G7sz7GbcgpoVPj9N0saezlyjYQukwrOT/rEsCX3zl9+5UqFjswN67CZQc9K
l7ZRocdwaBV2q2PIg23BVDAt65tnRb4pUzosFkOFkNyxXuzIZiXNzGIqZDQ7
5WJn1wvc21RKBZfmL+ew71TPGTy8ToUXQwnZ2GNlrRZTFVRg5refwvY6E+zu
UEeF+vqiBGyKf0kCzysqmI8/CcL29krnKOyigvKtDH/saNfIE7o9VNgx5O2D
XW1nlR38lgpL11Z5YCtpj5a0DFNB5L/LDtj8HEqvjsxTIXO/GBn7moBkIfUf
FZrL12hhm0gI7JNbokJqnNBW7Aj1OZFmNhqsu663GbvXvXX7ymoaSCnzymDn
3wqejNtAA9/7TauwdWs9HzpuosEli0Bu7K7HTmfWq9BgNmwdJzbbWx1y41Ya
1CicZsEOZuOOWzSgwePTw/MsyFvdSvljaDQwunfpG3abX96gHZMGzsmFX7H9
wzPuSLrRYCa5+At2TuIhZr0XDQTyrw9h/7lhfelvCA12Rmf3YzezfFeNiqdB
36q9z7A9+D4sWSfS4KJa1FPsGZGuTrFkGvAqHn2CvUG1dv/9EzTY13ftIfYJ
l9QHczk0yKQo1WLTy5XtD96gwUsDSjl2VOQol0gFDfxkG8uwL5sVP66+Q4OH
bSal2N/fyRr8V0ODgRBGMXYcn9jm/c00MBlvzscuC+fk3ttLg4kjF3KwX+k9
eSz4lgabyaHZ2L85EuPvvKNBfb9hFrbJ5cXZn0M0qBudzMDu6fg9snucBkMW
B9Owl9WHH4ev0OBXZUsS8TwLBfH8bHSwGLuZiG37bLvBTQ46jBhkHyHy5zNw
98cqOnSre8Rjb87sKtwpTIdH3MrR2MxfTfGhm+ngmNC9Dzu6MdaAR40O/J/m
92IXnDCYK1Wnw9MYWcLj8vd2fdOmgxzbgT3YR+i3vIJN6OBavjkc+0ZVnkEg
gw7X9LKCsB0yg8yNXOkQ/Oh6IPZU+FYHYQ86jP15GICtpfRke4s3Hd4Zf/fD
rr8wfmTDTjp4iil7E/0Rp/9s5AgdhPOiXbF3erJ3NRylg3pksgs2v27H25wU
OkirZDCxnad9xy1O0eFBRhkdu88/dfW183RImZxzIuppSheNy6WD8qIQYUlp
aVmXy3SQPaTtiO3de1uD8yodNv87ao/91bqfEVRBh50FB2ywUzZc8TK+S4cu
/xZrbGXWsCCRahSfKUU4vH458mkdHU65fbDE/k9NKXfjUzrMKeaZY59bNV20
9IwOP6OFCeuN1t3ofYHmX59phh1T4Nh4rIsOt3UzKdhsQgc/fX2P8utSaIot
+0FoV/AqBuRyntHFtjENUdXkZ4CGPhfhiKIHYwsCDLD8flgH+3FoYPAZYQY0
rtlOxg6erfFpkGVAJ4eoNnaGO6/McQUGKO9N0sKufeD9gbaRAZOnpjSxVyVx
e3xTYcCHV60a2DcFPOhCOgwITEpQx+7de0vwox4DRBx+bSH68w1rZ6khGs88
iLBzXrm9MYUBft4uakT+l5dX8VgwYNm7WxW70I/R1m3FgB4bBuGZTYsWoQ4M
MHjpr4ItlUZl13ZmwKPwmc3YFlPFj5ZoDAjlSCV8rtrRJNuNAVNRT5WxH4oV
LW73ZICnUDjh79Fz9crbGaBiJUZYn1Kg2+TPgLj7hzdhn+S2qWaEMiApbEwJ
+0PHtMbYLhTfPIDwEU8zFeHDDKBp7NyI3S33o+R6PAMimTMbsBW/ZSuaJjOg
oT6acOv+r9I7MxgganNMEVvcIP3iSg4DHmZxEN7Boit6NpcB1cHxCkT/nk5d
03wN1aPDWx6bPP2h42QZA56dFSLszdA85XKDAUsXWuSw70i84/lxhwGp2xUJ
M0pU2UQbGPBdpkMGm6fdtvxOE5rP1GHCTT9D6PaPGOBbspGwsn5x0ZFWBlrv
otdjL7ZLm//oYoArt7Q09t1pgx/HehjAHHoiRfSLiEe2XB8D5gfCCHd5n/3i
8p4BQYKNktjFv1YnN39lwKBCmASx/oqqqW37zoDxXEnCAoZ2b2bHUX30X4oT
9U9O2aA6zYABFV3Cwx2PD/jOMkDoTIUYtqPYSsvZfyj/BmTCtb6GIu0rDDDu
eSmKrVB+KIiFkwnvOkMIzxlNc4atYULv7ksi2L4paq6Fwkxg/6pD+EVnaEmv
BBMuz74WJtYz/89WsIEJ/QZ8hG1Su4+L6DPBiiVLCLvytcBbOxMmFGzWJywt
Za98xJwJI93Da7F/3XrSNu7IhCYeE8K5PdWrmv3R/cIigsT4ZdsH+XYzYbr2
2BpspTiuKrfDTHgewkq4Usnd62cGExzb1wpgtx9eqJBpZEKNqRQ/tvqI88WW
x0yo5mnnw85yKj66sw3F8zxM2F3R0f1eDxN+3O7jxX5w+oqZ1wATfo4dJyzz
Z1aNbYgJDVJGhEde5rM6jTMhMeTOKuzyK9Z9F2eZ4GKjRzgicrr8K4sLePv0
8WDr2F9M0OR3gYf6aYQXZc2YcWIuUER1ITze+9k+R80FapOkCA+kJZrfoLjA
3dcz3MR6TZE3fOzqAlPfzxO+N9+sNRDmAm/sF7mwK7ozKwIjXYBjdSnha7d8
VaaPuIDJYzrhS6kaJTFpLtD1gY1wTgCLAvc5F5hhq+fETpIolJC54QIe6ywI
7+00XUtudoHD1nMcRL9f3eSRPuYCBz3KCfNHrbnyTcgVRq8qE9byZ7fM2eQK
Le3d7ES/Osx/ByNXqNBMInxE58epSaordJ4wJlwiN6SRG+QKkM1NuH7xuG1U
lis4VtSxEfv5Ww1/14eusI7fn/Bw9UA0acIV1OlLrER/ZiZlC0m4wdbvNYTL
ovmX28Pd4H28J2GPwHOhx5rdgBm6xIJ9YXvRARspd3B5+4Rwv2vFEb5Idyg0
OUO4MHHmafsLd2gUiiIcelOH75SsBzz2iiYsWNbOenWfB4TxpxCuu+r7p+6p
B8g2nST8s+JQ5jtZTyB/iCW8sT5deeGwJwgMuREemfv4V/yVJ0xu2ki4WHtL
u47CNvgTPbWysqINvxKWjb3jtkG/ZQthk5edd4693QahpW2Ew8Z+vWHX8gJd
/m+EL3AJ/01M84Jj97iIeE4uu12XBr0g7L4UYc7itqoore0wRFEkbMt2rXLp
1HbYjJcX5NO+iXeTvm0HAR4Owp7TZ8c4jLxh0miMiK98pFz+eKY3KPzuIdz3
aQ2f7xdv4D/UTfgo5eB/ejo+YPpomHDTXa8EqUwfWCs4S/ivvAXv8pgPtPuw
EPEHP2t+m5LxhZzbrISbKynPB218wV1sgbhfU/o73D7kCyc0pwkXHUuvTSjx
BfriBOH/AZXtOpY=
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl1nc4VW8cAHBFCNmrzEtk773ul+uaGSErs/CrKCQyopRQkZEkZEUZlVlG
OJStEorKSEK2SyL7dw7/nPN8nvOe73rf5zwHd9rbwn0/GRkZF3rB7q5DHitt
H1q0XEd+DKzf1QXBjXx7uplcfK3gN/tBe104Sc+BDE9X4I9e3zy1IKoL8xym
i63TTXgnx0LcizYCvEk/d6d2+jP+mvMl2jvUBMA5r/a9nh7Df+Bu3NxI0AYr
0Noqn17Gp0w95Lr6WBNcztlHHkz8i7fXlHJhM9QEr8QABmfVFfysrPuK5F8N
uDX2EkcTvYq/wscX/9NUA15H8+m5CK3jM72JZb7U6sDZTRZH57KDN0yafMP8
QAXmS1zjy6YpwFFj5G/TYQXY/8V3xYN4AESc0t86d8sD21q4A1fWASh6R0Mo
vC0PGto5IhEnKeHPv2Fqs005uNs92nCygQpCqsh5vk3JgsjSmcV/D2hgtnf2
7bNOadBgv2zzgkQDPQKJt1vMpcFMLaLO1ZgW3gzL/NTql4KAG7m3O8joIJpp
35jypCQ0M4/j0j0PAeXj2TiRIxJQeli+IJOfES5baSa+rhWBGnH1wTUTRigN
yuRotRaBJk0Cg1UII5C3neHmXDoGX10t/an7GCHWvM3HT+IYkBX6afveZQKH
uMzm3mIhMFWr+KazwgzLgy/cYEEAbI/X0j0WZIFqXFG7WboAnHZqwq+as0Dp
BYulYCMB8L/xOa+oiAU8WMq8jxTiIL1j2ZfVlRWGKaT/Uwrghxl7RZqJTjbY
UCNL1LzGDTW3vn3TWmEDSi2BVhFyboguCS14yM8OFR/b39REc4EwZYuBoT87
iKw/LGhMOQIupdZRz3k5YHyMN2qskxM+UwVS+PlyAqOlpmhHMBvkyHF/7kzj
BMsKP6ajHGzg69jw5GgLJ+Qolt76WcEK9OXUhL4jh4Hzy33fgGUWMHB6FK7a
dBhGjVsdU24yQ21FzfYOOxfcdn1+PqGWAe78cPpoq80F5RR1fzd4GMCOhjyj
1JML8r2YukvC6WHF2VjzTAMXOJjUUQ2aHQIZ2sGQlnPcUCEiInSRkha2Fa8b
8yVxg2SE83WXIBr44HKUK7CeGxqdBsjc5g/C+ddeNaIsPBAw7CJzc5ga8ly3
/sXU8sA+j9RVjz5KuByT3TY+wQO385jOC9tRgk4lMUWLiReitVR3GocOwAjd
PWWSOy/8zKykuDxLAUeqeAMsGfhg/vtLWjY+ctCnylqjk+WHrFSyIuH8HfyE
ecuhLiI/zFYenDb5vY2PTJ3FJdjzQwrpYr6l6Da+SVLViC2CHyJlTxj1vNrE
61j1pPL084Pd/eWR6IU1/M/H/17+mOGHQye8luN01/DXf/O+yybDQRApjVIk
/R8eCfacERLDQUZki9aExSpeI5tCQyoUB0K58zxZQ8v4gWkxc1ICDs5s3rGS
11vGByuccCt7ioOV+vkdxtI/+OrWxzFKn3DgSx1geyd2Ca80rzSkJSgAHmvq
0wkuJLyM+rkws3YBYHpU/sPp0yS+KyIukWlYAEqtf0n7/vqNv/jx1dPeJQGI
CAtWF1qfwL9w3d9lwy0I5vkxVzTkxvFi0Wl8Lt6CwFoz+eRV5098R3ejvECE
IBQEteLPrI/gz3FN6o+lCKLzkGg3khjB579U8Dn7VhCehSkekJIfwgt9+dDg
w3YUfrfY6pTK9uObeJc/y4kdhcE7DZLMDV/wbmePTC1rHYW6p4OVElaf8Tkb
HkxBZ49C75ZLqHJsN55fgOx0+JujQN89eCTvehv+iLcceaKrEAhlMW1xtuXi
H2tUX2MPFALdEYlnxizJeH4a2Ey9JwTXP8yTk6z/wwvlmfx98kYILPr7ROmV
sxGZgbO/X7EJg3XB5cpIuxqkLH/hjJqEMDTI/1PVeFSPKAYEjNTrCIPwTlKS
2plGRI0p4lurtzBE2T7us/JvRoj6mZ3f2oWhLUvTSlb2A9LGKmzgNCIM+qGP
OLVpuxCj0edNoyvCkEvIz3588RNiHlpTNyN4DIKCivhqFXoQ+/IvxVuhx4BH
KlnP4f4XxIePLgknJwKdbt5bQ88GkKXZRManBiKwfdu87c2pQcS/5nCsmLMI
PPSRHbpJN4QEnzwWKR8jAlnnM0ap3IeRW3d1AokT6HfqQZXMk6ARhNqufbl9
UwTORAzeWmgdQe4Im/uasogCy82DOr9YfyLxjY7nbUAULA56C38t/ImkrgY6
nEsVBfutKVJS6yjC07zzda5EFGzO/vGvof2FZCVGnrzUKgp1Gfsulpv+QvIk
k0xDlkVB2dmfQqH7F1JyphhiTcVglXW/6VrbGNLcNX60dL84tG6+y8uMmkAK
C2oWKjjEwTcrNLW9cgKJvxlXUyUhDq+KTPwlfk8g9sqq5g3W4mD7wud2AeE3
Mp8RE9JVKA6yXYGc/X9+I72Brnq9iDgUvXh0g5d3EqmyUGLq/ywOjckzo6/1
J5EblCNPh7fFYTzVs3g8ZRJhvyjfM2chATSWwkpR8lPIhj7148X/JMAh0cYp
x3YKGcEN/ff3qgRUpPaVC4ZOIYVfIrc2n0rAjcdPKk43TSFamt9F6DYk4FJ6
1UvW49OIB134NbEnkpAXEumF15lBjCdOGklVSUIK9czDT04ziEyDGJvcB0lY
MKA+NBM8g6z7fS5UXZWEhz9P+r0rnUHuDRzrMzCWAhGJQ32KR2YRv1ebWcdd
pOB1ArUYUX4WsY3r9jT3lwLVXgnNWeNZRIAQss82UwqKHK9bUV+dRSoLP0r8
90cKtO+U1Of1zyLpEU9Wz1NLg8TWwdKsuVnkhlPg24s80pCkdoEbyOeQ48wC
tgH60sAY5YW/JDmHjAT537yVJg2yvVVPOkPnkIij9HPdOBkgm1Sbu8Ywj5zt
zadUlJQBr5UM04+4eeT4DQJ/iooMsJD92miXn0fYRgItncxkoPytO0WX9Tzy
NO1X9fRVGVi/cGFc6dE8cscorNckWgZOMClOsxfMIxfXOOdK7svAAQZZ4eKq
eUTJxpT/SqEM/A3oNDzUP4+0MldHkn+VgREnPo0cxgXkeaNllscv1K2PuT14
F5B4n/nq9nkZEAxeLJsRX0BsPwrOxR2QBfJRjlOgt4BM3r5nyS0vCzL377JK
Bi4gNPvc+BXvyYIsxxG9xe4FZL54WzXlkSz4SWx2GA4uID1Ojyw3cmXhTgXl
Bb+JBSSt9mNk4xtZ6OMJttJcX0AkAlXnTND/ipQ+09URBhLCeOwzZemyLGQx
vfvuwEpClr9c5Gclk4OaF2ZnmzhJSJ18ruV3djngdyhasMGRENMF+hoPXTlA
BnD2qbIkRC6joLfdTA5kWGoIoYokhN1Ed07ilBzknQi5Y6pKQn4UBvH/8ZUD
P2FTrzogIT4eY5HXMuVAmu7T6GdTEpIwVG2Zsi4HKy9kz4qeJSGJT8MILQfk
ISeqiZPKE7U3QX6ZUR54mc3Jvl5Ave8Ds/kxeTjHQWVj5YdaaKSbykoeurTS
uetCUc/nNio6y4Pv8aORatdRV54rPXNeHkh5bj3Pb5CQ+4Z/4pHr8lBiLPjV
J4qEJF2gNL/yQh48bF99CIlHrdSJz6uSh7fNtVF5iah34qR738kDQaQ7pTmJ
hDxIOMwg/V0eVJrYPKdSSEjyK4mPE5QK4Ppcw7opi4SkbFkct3ZRgOIsEYWp
l6hbODQiPBXATjlz404J6rhB8bIABUjaCrsiVEZCHuE8aOljFWBwVoSe+IqE
pBKDOpqrFWBuwFxA7g1qeq2aP00KQPXy/GZ6Ler+/YW4TwqAhCRf21dPQtLO
xdwOnVCAjk+fFysbSEh6bKaBIosiqHxbvD7UjNraTeUMryIoPaTJ4WxFzScq
kiCqCBxWR7RN20jI49Iyqjm8IvBPkNsXdJCQjC/NLbleikA9zHsX10VCMnlm
dVlbFCF5PdFFsp+EfJrtHwj/pAj2JWfEab+SkP217y4tfFeEq6pGNuOo3ezT
sjoWFGH21yX6uO8kROyh0eb1w0pQR/UgrnqIhDh4KN2fF1SCImhdCxkmIbGK
AmIOUkpw42KgkvoPEkLqXbNRJigBU+Rfx5IREvKasaB8zksJaA4Wdwf8IiGT
P5KMTl1RguhRLy3cGAk5XHz9Z1u4EjDevTvahvqqiS1DbrISsM9obzFMkBDt
O1Se9g1KkBGmXho2SULek3sItLIoA+2p9JDfsyRku+dEtQKvMiyc/eRxfo6E
SOdomueIKIOhgbTkDOpEYAsL1VQGdnkVn4l5EmIT2vRN/j9leBDP3NJEIiHR
x0t8sn2VIZe96obyIgmp4UqnYriqDFb75J3zUXPX+ClOxyuDn9vd5IglEjK6
IpCQVaMMUxGJH44tkxDWFnoR+mZlyExgsI9BTXywXh/SpQy6t421F1Dny/fM
Wo8pQ4LikHrJXxJywSfc4BC9CjhRmqfzrZKQf1M/doJcVcAtuMG3eo2EcG1s
dLR5qUDfcTmeQ+skRIuOM5kjUAVOvaw/7ow6Qspc4tU9FWDd/Gexg5rJr8GW
9Aa1rXyx1CYJUYgYFMS3ovFTUqSvoLZ98G8+tkcFDiVtuNejzqiUuSU+pQI4
Db1Dhlvo/m5mlXqwqwLVB4dJs20SYnKo7uornCqcyjOqvYfah/ebPoWkKhwh
X7r0HvVrYBrOJqjCe3x6mu4OCdG5FU4z5KMK6iLujiJki8gp+tNnLDtVQVVY
srxx3yISxhcmldOnCk/YBwdJqHNkUtdIP1Wh9L9Rab79i8ikRU/cvX+qwLj8
wyUI9eWHOrXtQmpglzpofZR8EXmY7xTFKasGymKv5ExQ11QHW/ynoQZJ7+qs
/FGTDZZNUliqQaBvYOA71DH8gmxwXQ1OT3Mk21AsIsWy+JF7d9Ug/3nMRjDq
Hp1TRUPJatALCPIYNaf7fe2QF2qgps3p8xN1XgH5xdff1cBM+k+964FFpF5u
rEVCUR1wP4dPGFAuIsxGx1Tf4NWhTugZzhW1h+v5IkMjdWhV/hkVhJohnhTn
4awOvN+KeAtQu8xt2mbdVodw+5FccqpFpIICOqWS1MHjcYXNYdTU3Dc16zLU
gbZN/KUU6lKjgwLfy9UhqYjsuC3q/flsMyzD6rDtW3D5GWprxNYxZ1IdKsap
L9agLuxL65L5ow5MSyXsH1BbHhCoMKHWAK1MpZBF1LmnpUKj5DTAa3iyQol6
EdHj0WfYiNSAn76bK+WoUxXuhN9O0ADFUfagt6jnjT/84UjXgDMJPnWfUD8M
tvyqUKoBth6L8bOoJ/udsy8OaICfmUEY7uAiorGQw7I1rgHdbv6SUqjjKSdu
3SVpQKmlzVM11KqKXufzD2jCZIfRmgXqO4mB8qPSmhBQHKIVjnq44E2ej5om
uKdyWseglmvc5tjR1YSfgvlaD1EPLERsctlrgs/hh7eeo5YwSWg+GaEJDH/j
tz6j7qIqtGn/qglK9+aVeWkWEVDlyBL4pQkWa0NRwqhLzkdMhsxpQuBgSYUU
6vgPTkFS+7VgfcD3mRZqi/ssaffFtUC5+gW5I+q3Tdd/zSpqQYDaj+NuqOVW
5sT1QAtWJQwDPVGz2LXV/rPSAp/EsYAg1J95Q4cdw7Tgoj1wJaHWNZ8WrozW
Aum062GpqCvCbbwZ72uBUFtGSxbqB2OyZO+eaUGfuRHVC9TWhRM4kW4tqLT4
aNuE+quiufuSIB7MKLSezaM2+K/uhbEUHn7Zecb9QV2VIraSq4KHgoc7p/+h
frRBEWVjgoepF+Uf9tEuIvaN1fm1AXgQjSyoYUHdsSS8yBaOh78hF6g4Uasd
TVL1vouH6mKiDjdqrqiLHbgsPNDlXb55FPXgccHZyHY8nMnoVlNAfTwsXmGk
Fw8PpN/vKKOuLd66qjqMh7DZuQp11I+Zvx6aXcIDa3IBSQe1tFfLQxF6AKMZ
qVfmqEmyIdWxygDzD1mLzqHOnmlfFdME+CH+/KMXaos8TqU2HQCrjb+/vFFX
cL4u228K4O2eOuaPOnCHVHTFDUD8IAsxHLVoNX6a9TyAmKPw1k3U3y/dEynz
BtAyn86PRK0xIZ43Gwzgbpg/eBc12QePDNcEgH13at88QF0a+WpwOxmgo6Oe
IwX1aaDgSk8H8KAfP5uKuqk8+2HfM4CuXMWZDNTRqYPxxvUA/ALtl5+hZjxr
cVNxBiAogOz9a9SNuOzGHhKA5/Wu+CrUlwYWdrxXADTfxJjUoP5sGnu1cJ82
ZNMHFtehTlFs8+fj1AZBb6PDTagNF9granm0QbT2Q3Yz6vV89yU7QW3onnQT
bEXtwE3unSSlDQQjInMHan5yrbMHidpgQKjM7kLdXRvz9KmRNthc7vz7CfWN
gIExgrk2KF8sJfSgHpsKdA07pQ1zcPPDZ9T5n8rt//hqQ6e+4ONvqGUyRE2G
MrTh8aAZcRTL/53W+UiuNlR8+S7/C/U7jnkfmwJtuGDgwTuG2jqhLKm7XBuO
NWf9Hkd9NUJ9sLlNG8wbjphModZr5Jnf/1Ebol/d5JlGzbC9s4Pv1QZ3T/9p
zDlXmgRrhrRhfEYyeBZ1+3kTz5dL2sDhE3FpAXXiM+nQmVVtWJ9tFiFh/Y8x
xYlsacOfCbJBzCTHvrIcKh1IOJyiuoSa/YTzejK3DgwulvQsY/up7Hv7mp4O
6JC73FpDLXHZMq3WWAc+pjUwrqP+W6L4Ys1cB3A6A48wR4utf/I7pQO6dh55
G6iLeW5ynvXRAZ+p6pwt7PzZu4vl+euAGH0/9zZqnYf6GqPBOmCb+jsJcx8j
nYvDLR2Y61sI20G9Sf7gmXmqDoTxZ6vvo1tEWuBKdWymDuRckXmKOS7UrrMj
VwdkFTbo96MWWOVZ0C3WAbc2jwHMBtNPlVSbdCBYNNCFAvWDT1XNuHkdqNtm
wlGhtpUq9+36owMq095BmI/EvOAJXdOBxiH1T5gz9HP8v1IQYO6FXBA16vz6
u0JxXASwCFCsPoj6PHdktwaOAPoS6QdoUEsGXw+dFibAWfEMc8xliv5fiHIE
cDSOHcVc+9zp1qYBAaI7Pq3Qog6jsZMtNCXA8+h2FTrU2mcth2ysCPD4zf0g
zC2CBorlzgQ4qV6zirkrVXb8XAABomhTxg+hHo2mIPY/QfOPJsUxoM6d2CZF
FBBAMV69EfN/umvpcsUEaGY8toR5dmduObaGANM+b08wov4b0J+r202ACip5
KibUVZ+7zZf6CLD2Tk0Oc7Dc+83MQQIU6Ss4YN6ea7Da+E0AvVMpLzBTuxdS
lG0TICEiTJ8Zdcfb3BJnCl3Ql9TzwhzLn+lwiEYXtNw84zEzD96vOMumC44P
fvRh5rYMdeOT0IUXfW8dWFBLa5s3xdjpwmaMrAkrarLnzgN8zroQNuR+FvMn
du+lMjddeM0pfhOzz2ws/zdvXRDytq/EXPaw86pQpC4wBrMcYUN9Y//A/aq7
unBxO14Ws+WF6ULjBF04hE82wLysc/Cbb7ouNC6AP2aleT3F+jJdGJ0MbcdM
aWd9/ESVLhiKpg1h7n/nfmasTheEX7gtYg58FJFA047mn+DiZEddrft2zvqH
LlyVmHfFrJGm+XSBloie57IJzHSUJnU3mIig0rryF/OQj8NnNg4inDz6h4ID
Ow96Ifs1BIjAFMAlgLlhscopWoUIXEyOdpjjHdr8ubSIoKaY7IHZtbU/5iWB
CJy34/0w73+8UvPZlAgjzjUxmAkGChw4dyKUPdGqxcxaTpCqOE+EYLfUVsxj
PJZEfR8i9CY392CO+OPrdyGECD1UiZOYWzKKu6oT0PpcJZg5URv9FYu2qCeC
779FR8zyvz5cuvWOCB/38Xpg5u72caxqIwJfh+BFzPPPX8vx9hKhma8yFHOi
m87Q1G8inE4wTMMcYjHeyj1HhIFDsTmY3SC6zGyJCBJVSAFmJe6PUa82iWCt
P1qJ+XuvnVw4kx5Yrzb0YH7XuMldwa4H1CV83zA/L86k+s2lBzrxNj8wh90d
HzwurAc14WYzmAUIvlGc6npwntll32HUtLKsl4xBDybZb1FiXuatdAgj6kGY
WRQt5pb1TdkxMz34xi/Jhvl8WfRgsZseUPnYHcNsmSXeOnpOD7Y8GsQxa9z7
WMrmrQfXSgVkMNOfZ40KCdKDqs0FFcxluCxZ/Xt64Hqz1ghzGgOBO/i+Hkzc
FDDDHLE1TvkiRQ9MEkIsMVt/Ex9kfqIHrafWT2Fej6+MHK7UA8s/vz0x/wqz
92Wq0wMp+mxvzO+9tk7pvtWDso+afpgzDAiyhe/1QP0mLhizDlnXgP9PPbjN
mB2JWXzetyV/Qg+seCNuY2YdZC0dmNGDiCGLGMwTlfaR2it6wOFVn4D5rveE
zCFafYiTk07H7BWW/aqEUR8kRqkyMZvGOqhZsetDxce5bMzMRT2ENJw+HPEt
fYY5daLeWlRFHziYG8owX/0bNPBeUx/yxP57hdmJQtHFh6APw8v7qjDjBIrO
VZrqwzW0S8z5jg+vEt314e38/RbMd7ws9k2d1wfb5d623XpCDkXG+OjDpBpV
J2aZRzfjekP0YbHSoAtz5WfvHNdEfWhtJ/Tv7q+xQVsoog8n7zeN78a3JzfB
NeuDAHfU79345+q7mzr0oeYdcWq3vyiFAdo+fcivKJ3F/OUt//yjWX342nb0
D+bX3QOXNJf0Ie37s2XMKSPJqyOr+pCYz7eC2WGbbp8IuQG0Ns7+wzymusby
+rAB5BSRbe/WY1CRYsdnAEUGEju79dh482wdNYAJohnZEaw//3FhXRkDGH5+
bT/mPyXdqj16BqBAWUqJeb9IofO8nwFIzrAxYF411mf0DzOAprfLjJhnvcca
NqINQLb7HTPmvkpegYMZBpDFLMaOuXPgTU9cvgGY+dVzYG7Ysb3JXm4Ach6a
hzEX6N8fE2wzgE9PN7gwZ3jKPCjsMQDzCg0ezIlxH4iyQwYQ1+vJi/lqP9Uz
rSUDKGfI4Mds/t/Vc3bchkATVXkUM/Hu4SMjwoZwlva9EGa14tcdHrKGUPLl
tzDmo6sk8ct6hsC8zC2KmR4vHht+yhDM3kiJY/4X6T5/z8cQNIL2S2Ie/Zhp
ln7LENxId6Qwv2f/XlKQaghUtm3SmF87sTJXFhsCt0ObDObMp6Z+TU2GYM7z
VHZ3vpemNJIGDEH2aKbcbj1aEZRuS4ZwoWhQHjMVDd8n+YNGMHjguCLmz1+q
H5HzG0HgeokS5osXFiSemBhB/cV2FczUB4QadEKMwCGkWRVzTrq95Wg+ul4w
TA2zhkL8RHifERzY+qm+ux+dzUE4CmPIDj6midn3zAZdo6wxPFFa23XqGb/a
2TFjiBa2A8xNZ2Y8OVOOg/LMuDZmstbeWC28CWSnH9fBrClWW+w2YQJ5R/QJ
mJOe57NmpJkCjuHArmelHgT1m5sBPkJ81zasS+a062bwZkVl1z+vHkvKPGEO
3xojdh3QICwbn2sOK7PXdk1HIfzx+qo5PGG9sWtpm2d0ISdOgGuyz64tCkWM
/YtOwPc3VLvelhp967VzAhyqC3ZdVJ6m5mZpAd+1zHc9rt9v6f7SAt4LV+2a
b5D5gsdBS3iw8nPXqtqZyvWnLYGsPnjXlk/F97PXWoJjT8WuVzRIBzwZrKDI
0nXXqb0VBxtOW4FXo9uuO4M2XvLWWUHvj6Bdb/LpWIVynATBbbtdv15tkPvm
eRJ2mpN37duFZ1JsOAkZ50L2+g1kyP7NbA0sF9J2/ZT/h0yquzWwN2Ts+uNX
mdPWiDWIUUbv1RN/4z7zYRso5U/ddX4w3Xanlw38ObRXv51b8tlbDTZwkLA3
3xTHnMsGXLZwOjpw1/3WL6/TBtjCcsfevLPCl5o7O2xh5vRe/LPPlWhj+OzA
XSRy14z5nfueXLIDuW/hu65+4vKvutkOaITDdr3w8kr8dz57cGm8umuhmnsi
G0H28Pvr3vOxlaE1zo/2MOd7c9e58pKdSgKnYJbs9q4Xr21rOoWegiqq2F1r
ve8qufX1FOQt3Nm159TiZ3I5B7h1NWqvH0rWtfC7DsAjcGvXpicvWm8NO8DK
2l78A7lt5YFyjiD4ds+G+/PKtmIcIev03jxiXcJLb/x2hAfxe+/bkx5MUWg4
QVnNXr8i1wtxUfFOkHxhL1/fCAOtyy8nEGDY801t/2UVJWdoIO6try91uMYV
7wxzX/bireF0abannKE6bc/DP2V/z/O6wITfnhvKtNuHDVxAxXjPstyTUHzF
BWr49pxz617Vtacu4MG45/8B768IPQ==
             "]]}}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 133.20309365162302`}, {-1.065454735914874, 
           304.90037020952866`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"x\"", "\"y\"", "\"z\"", "\"x'\"", "\"y'\"", "\"z'\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.684454984786296*^9, 3.684455000832922*^9}, {
  3.684455712709743*^9, 3.684455731028331*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results with extreme updraft", "Subsection",
 CellChangeTimes->{{3.684454883430534*^9, 3.684454886851347*^9}, {
  3.684454950904612*^9, 3.684454951930934*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"windyLeaf", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "70"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.684455737091365*^9, 3.684455760110649*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","evcvmit",
   "\"Event location failed to converge to the requested accuracy or \
precision within \\!\\(\\*RowBox[{\\\"100\\\"}]\\) iterations between \
\\!\\(\\*RowBox[{\\\"t$149645\\\"}]\\) = \
\\!\\(\\*RowBox[{\\\"1.2009865208330457`*^55\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"t$149645\\\"}]\\) = \
\\!\\(\\*RowBox[{\\\"1.651356431855972`*^55\\\"}]\\).\"",2,1255,231,
   30891707043100881974,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.6844557500839243`*^9, 3.684455760562237*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
      "\"Distance travelled: \"","2.786420835406777`*^81","\" meters\""},
      "RowDefault"]},
    {
     TemplateBox[{Graphics3DBox[{{{}, {}, {
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Line3DBox[CompressedData["
1:eJxTTMoPSmViYGAwA2JmBgT4Lpu+n2tjhsNzZm3DDtPbvujiSvpFt9mtJgSh
i0/Yuv3XNYELGOI/VpT1RnYIBaOLFxvu63KQNsMQv9bhfWRTSQCG+Pq+XyFx
lSkY4hrdM4yCkkowxLvuVZ3awdOMIV4Vt8vrvsQEDHGGghkRzdtmYIhPUJQ2
Sl21CEPcwMF7wZboVZjumakj8vvVRkz1Rxr36rrvwBBXaNC6961yP4Z4mcnF
PP2UIxjihzpnNz49dhJD/Ej9y9/bJ53HEH/I5sv7Ke4yZjj3HJy1ROU6hvgL
q79rlLfcxlQ/9X9EV8gDDPFtvPcWZN16hCE+w4m7o+v8UwzxL5feL3p+5AWG
OBdvi+SDa68xxDtUI9gWhL3HEL/yrsrEMu4jhnhdV/uFWc6fMcRL/LiOvtf4
iiGez8Rx9On7bxji3Dk/zh648QNDPFj51vKaqb8ww+fiQtFbZn8wxO94PfC1
vvsXQ5xf59G6VQ7/McQrmxd8ePx+Qhq6eIDb1TvLlguko4uvVMuUmrnbFEN8
u+GhdZ+3+mKIL/MocNmiEY0h/s+q5sxu5lQM8fRpc/dempyNIe7xuilcaEU+
hrjPx9DXC4IKMMQri//emumHKa66O4mzfhamOewLGW8ZLs7FEC928vvoZJ+O
Ia4y4/z6oAJMfwlvYTluPs0ZQ/zptP/uboFqGOJ2j6et+cFwIgUA2L2gWg==

            "]]}}}, {
        DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
           FormBox["\"x\"", TraditionalForm], 
           FormBox["\"y\"", TraditionalForm], 
           FormBox["\"z\"", TraditionalForm]}, DisplayFunction :> Identity, 
         FaceGridsStyle -> Automatic, ImageSize -> Medium, Method -> {}, 
         PlotRange -> {{0., 0.}, {197.5325619710927, 197.5325619710927}, {
          1.146181465056914*^67, 1.818155747342392*^190}}, PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02], 
           Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"projectile path\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxN0H0s1AEYB/DjZpeubl7usMIYputuVnNxLcvdLi/nZoeOLu5wjknpnIvq
vK9DlLDK6bQsNs1MTYRNFwpbSVZrkrPRkTGlX2vLbsdN9Yfn6dm+e/b577uv
b0ZeQpY9iUSK/Zt/v1M8OxAsfyck7V6DKq2Z6IrZZbwvpUNGDIGLzn+MCicm
wbSG44YjhAksbfvOZxLr4NLDkfoAwgp2IjSjfsRe0a4dChl5Ps6e4JSmWn7F
nD/YvIdlPFbDAntHvbH7rTwK/nxlonp5ggMufeqviVdzwUWhM4x2xzCwjjV9
gJIVDg6jM8YKK/ngF8JspiZUAM4JWPq2aD4FvlFVr7jVEwnu9VykRKRHg8Vc
hSKMEwP2sFLdO3ZE4NVfyTb37lgwWz2vnywRYx+Xih5Bcxz4QRCL4F+LB9Nb
1+ct5xLANOb2Fw7vNFhw+dFII1MC3lpoH8gnJ4Jft/SlUOfQ7z3kpvHRJNy/
V5pPNpwB+9I2zAqdFGwzNpG0OWfBsuuNoQxeMnjT1T/6w6EUsKvRMd/FXgaO
HCRH75tFPyvQWwKG5eCO2OKX402p2G/NotSVp4FHxJkNy+x0cJvk05i5+T8P
0VcIqgKcEVRym3cVzSf3sNs20F12P7wW0jPAM/sT78un0F7FNQ4bPCU4cPPr
1vBjtLFFJLzokQlWPSzTserQS30mIduClq6wb9Ks6Gm38qmfW+jnWj9x/w76
bniu5CQlC/d7a0uNc0N3LfkUFHDQPvRL/UkhaH3ExCaXi9Z15mhtJ9AyVW9Z
tQBNswpq7yWgK1n6ySIJ2ipbo8qT0KsjdfW+yejRqpk7XQp0yGDgTJ0S3b2m
dcvLQhtE3obgHLRTqdrEuICufvLqoCUXvb1Il5tUaI1zdqtRjf4DkcgVYg==

             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvcL/+jbj2LOe32XT93NtzHCo1XKbpvr+lxeML/C+
6IDyey5vGJ+1VDRfQVAGzo+e2unYcFMFzn/Iob3HtEMbzpdzP8n4NdkQzr9R
frTt8VETOL92o0pRYIEFnF9lflV0EacNnN+sfU6KPdUezrcRET1c2uII5+/1
TNcsMneG8zNVH72+/9AFzu9q7Uvs3eAG52+Suc/umuAB5/tbJCbamHjB+RK/
uMWX/veG859/ivorvsYXztcpuD3tVI0/wj1CDRucpwfA+XP1tN87NgXC+SLz
Xt3+kREE5/Np/nlg4hAM5zuXLds/QTMEzv99b9G2QuZQOP/ErM3R3DcR/AsS
sbeOHAhDhP+miELmmeFwviLf24eJzRFw/t89UxkqMyPh/Jj2CeaiDlFw/jdh
FY+LGtFwvvAezkIhphg43207swfPdQR/S8m0H6r7YuH8pb7VB49MjUO478WP
5Ob6eDh/v39K/2OdBDh/Yci1ww+nI/F3iTx9z50I5yfp1UxyqEDwHZk36Cx8
i+CvYnwney8hCc6/yhs6O/YMgi9b3cH61iEZzlf/9uT3vrUI/p5Z3p65Eilw
ft6CumbtHgT/0eZbnjo/EPxVjxRKSkxS4fwiwfR5ewoQfACyk3TJ
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxN0H0s1AEYB/DjZpeubl7usMIYputuVnNxLcvdLi/nZoeOLu5wjknpnIvq
vK9DlLDK6bQsNs1MTYRNFwpbSVZrkrPRkTGlX2vLbsdN9Yfn6dm+e/b577uv
b0ZeQpY9iUSK/Zt/v1M8OxAsfyck7V6DKq2Z6IrZZbwvpUNGDIGLzn+MCicm
wbSG44YjhAksbfvOZxLr4NLDkfoAwgp2IjSjfsRe0a4dChl5Ps6e4JSmWn7F
nD/YvIdlPFbDAntHvbH7rTwK/nxlonp5ggMufeqviVdzwUWhM4x2xzCwjjV9
gJIVDg6jM8YKK/ngF8JspiZUAM4JWPq2aD4FvlFVr7jVEwnu9VykRKRHg8Vc
hSKMEwP2sFLdO3ZE4NVfyTb37lgwWz2vnywRYx+Xih5Bcxz4QRCL4F+LB9Nb
1+ct5xLANOb2Fw7vNFhw+dFII1MC3lpoH8gnJ4Jft/SlUOfQ7z3kpvHRJNy/
V5pPNpwB+9I2zAqdFGwzNpG0OWfBsuuNoQxeMnjT1T/6w6EUsKvRMd/FXgaO
HCRH75tFPyvQWwKG5eCO2OKX402p2G/NotSVp4FHxJkNy+x0cJvk05i5+T8P
0VcIqgKcEVRym3cVzSf3sNs20F12P7wW0jPAM/sT78un0F7FNQ4bPCU4cPPr
1vBjtLFFJLzokQlWPSzTserQS30mIduClq6wb9Ks6Gm38qmfW+jnWj9x/w76
bniu5CQlC/d7a0uNc0N3LfkUFHDQPvRL/UkhaH3ExCaXi9Z15mhtJ9AyVW9Z
tQBNswpq7yWgK1n6ySIJ2ipbo8qT0KsjdfW+yejRqpk7XQp0yGDgTJ0S3b2m
dcvLQhtE3obgHLRTqdrEuICufvLqoCUXvb1Il5tUaI1zdqtRjf4DkcgVYg==

             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAqE/XtjNdzUm1jPTHcUr8igCPbl+X
76pKF1WsnAGmoA1RIQelXO+6StNWhcXIYsANemrTRz/vykpa0qK5LsHijQ6P
OZkw79pKlLaLvJsUMQ5YoexBKe/qSgzdqqzW4j+OfSpGliXv+kpl6xukl7mF
jhDvcsAj7wpLwf171522sI4FdRVvIBEcS/PyJqyijuiOW5WJQYDZJEtOahy4
CiQND+EIK7w1iCtLxoRDag34Fw8eR8kB9WMxS2efcOTO5DiP2HfFhuPFNEu0
gtvuxZAZj32xJHJRcDhLNVoAhqaqUg96N9UVogk8S15e5MtavlEPgyvOGgdl
P0tVVhunVmVrjzwUFcN1hEFL32coiuB9Qw+9SWcpcjdDS0NzOAsti4UPaSXi
69/hREth5sxxwNWWD4qFjmGNsEZLO4Xp9addoQ+yHN8HRWBIS7nmLqWaEaUP
TzhhYTw0SktzwUnDegumDxj6Cxel/0tLnJZ0HUdVow/n8lr9F6xNS6AUHf7Y
wZoPLHDblsp8T0vg/0uAUY57DzwSgLBDl1BLKsvOElbvkI+dLivvQYJRS4Sv
j/U3HqePFJ7q2/hoUksFyrZqiNayjw4p/OA0QFNLPtBONbPNuI9Ddqa/kClU
S/y03FZftbiP+96itnEDVUtMKgTEBVyej8ias1sL2VVLesjXeCm1sQ/QGF3a
xMBWSxt89SVLI8cPW7JYcQOZV0sxhanrD/LQDyEO7eFhg1hLQYZinr0Z1A/9
vJUAeWlZS4jn61hztNMPXIeQNxVAWkt6GVvcmOLPD/YTJEjRKFtLCjsEsT6t
wA8TvAlxEgJcS6Axg87lnJePRrcDSAzXXEvSVU1002LJj7R0lvglvl1LzLmx
bsgk2Y+lTXvBxJVeS/r6lRY8meGP0Oj4Y4N/X0v7mGKA4JfyIr9PZI/jLGBL
r0VAWaDHRCOhVNbD4ZdgS/LFTDXPmFsjoboU5e8LYUuUAQeMOOdmI2IufJJA
eGFL5H4UNSM9bCNBA7Asoe1hS17STElGg2wjqgHuHd5gYktyRHqFZmpmI9UN
VZtdzGJL2vCgNHbsViMde4gF7UBjSygK7ca80EGjJ/bk+76tY0vf7BItxGdk
o7yaS0ltGGRLqriwNv/AcKNuoH6DK4xkSzfOZkJp3XOj4rPaSSz4ZEt0BrRk
5w9wo1jlLIsO+mRLYhOFK13Wb6POFn/M8PtkS7dtOYxhi2+ju3kjT7X/ZEv2
C+lQwvBuo5Q/bFQ+B2VLnglSxJ2obaNGy/1eUBZlS0eyzRiGymqjquIgdHQ0
ZUvej56FGMVjoyAUc7VWNmVL/G2d0HRFY6OWRcX2ODhlS39Z5lr0w2Kjg6hp
ef07ZUsee59sUrtho1xusn6GQ2VL6Ocs0H0mX6MO+kOJmFJlS5DEynDuylWj
hCuWynpUZUv+QSBLg41Uo/pc6AtdVmVL+M5tMwdMU6Pnv4yOIVplS8uQS+TF
vFCjwIXVk6phZUtmdbQoBNlGoza3J9WMY2VLSaQ9g+UbRKOs6HkWb2VlS6KE
czBLVkGjmUsemTNpZUsaAcVO7GI3oxB9cNoVa2VLxKhrZ0mkMaOGrsIb+Gxl
SxkvqV+oqCej/N8UXdpuZUukK0Ut18sXo3IRZ568cGVLeEikxq9QN6KqaUpz

             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
23w5Gm73f0b7mqI=
             "]], 
            
            LineBox[{{1.4659725219058976`*^55, 1.9180226508575985`*^94}, {
             1.4659725219058976`*^55, -1.150813590514559*^94}}]}}}, {}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1.6428642246949512`*^55}, {-1.150813590514559*^94, 
           1.9180226508575985`*^94}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"x\"", "\"y\"", "\"z\"", "\"x'\"", "\"y'\"", "\"z'\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.6844547851171913`*^9, 3.6844548166789827`*^9}, 
   3.684454849103918*^9, {3.6844549048775883`*^9, 3.684454932797484*^9}, {
   3.684455744266198*^9, 3.684455760853513*^9}}]
}, Open  ]],

Cell["\<\
At this point, I had spent at least three hours trying to get this working \
(and then trying to understand why it works). As a result, while I think I am \
capable of doing the validation, limiting cases, etc., I didn\
\[CloseCurlyQuote]t write up anything to that effect. Sorry.\
\>", "Reflection",
 CellChangeTimes->{{3.6844563659772873`*^9, 3.684456428175211*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<s4`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], "\[Equal]", "context"}], ",", 
      RowBox[{"End", "[", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.684357863944007*^9, {3.684455824856429*^9, 3.684455850377322*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{37.9326171875, {0., 7.}}]], "Output",
 CellChangeTimes->{
  3.684453866512742*^9, {3.6844558266807737`*^9, 3.684455851781797*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cylindrical Coordinate Systems", "Section",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.684456136242511*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<s5`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], " ", "\[NotEqual]", " ", "context"}], 
      ",", 
      RowBox[{"Begin", "[", "context", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.6844561363232317`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{37.9326171875, {0., 7.}}]], "Output",
 CellChangeTimes->{{3.6844561364029617`*^9, 3.68445615422828*^9}, {
  3.684456337475828*^9, 3.6844563505609493`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["17. Explain the math", "Subsection",
 CellChangeTimes->{{3.684456462287693*^9, 3.684456468470971*^9}}],

Cell[TextData[{
 "Because the direction of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["e", "r"], "^"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " depends on \[Theta], the equation given ",
 StyleBox["does",
  FontSlant->"Italic"],
 " include three variables, r, z, and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["e", "^"], "r"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.684456574968669*^9, 3.684456609808179*^9}, {
  3.6844566568240547`*^9, 3.684456718336648*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["18. Derive acceleration", "Subsection",
 CellChangeTimes->{{3.6844570336046267`*^9, 3.684457042349332*^9}}],

Cell["Step 1: Take the derivative", "Text",
 CellChangeTimes->{{3.684457660458034*^9, 3.684457671295412*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"velocity", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"r", "'"}], "[", "t", "]"}], "*", 
    RowBox[{"er", "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"r", "[", "t", "]"}], "*", 
    RowBox[{
     RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "*", 
    RowBox[{"e\[Theta]", "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{
     RowBox[{"z", "'"}], "[", "t", "]"}], "*", 
    "ez"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"accel", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[PartialD]", "t"], "velocity"}], "//", 
   "TraditionalForm"}]}]}], "Input",
 CellChangeTimes->{{3.684457364808696*^9, 3.6844576381791286`*^9}, {
  3.684457886056686*^9, 3.6844578871822567`*^9}, {3.6844583212686996`*^9, 
  3.684458321724421*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"er", "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["r", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"ez", " ", 
   RowBox[{
    SuperscriptBox["z", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{
   RowBox[{"e\[Theta]", "[", "t", "]"}], " ", 
   RowBox[{"r", "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["\[Theta]", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.684457434672406*^9, {3.684457489231421*^9, 3.6844575365551147`*^9}, {
   3.6844575717001143`*^9, 3.684457638883616*^9}, 3.68445788748771*^9, 
   3.684458322204857*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"r", "(", "t", ")"}], " ", 
    RowBox[{
     SuperscriptBox["e\[Theta]", "\[Prime]",
      MultilineFunction->None], "(", "t", ")"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "(", "t", ")"}]}], "+", 
   RowBox[{
    RowBox[{"e\[Theta]", "(", "t", ")"}], " ", 
    RowBox[{
     SuperscriptBox["r", "\[Prime]",
      MultilineFunction->None], "(", "t", ")"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "(", "t", ")"}]}], "+", 
   RowBox[{
    RowBox[{"e\[Theta]", "(", "t", ")"}], " ", 
    RowBox[{"r", "(", "t", ")"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
      MultilineFunction->None], "(", "t", ")"}]}], "+", 
   RowBox[{
    RowBox[{
     SuperscriptBox["er", "\[Prime]",
      MultilineFunction->None], "(", "t", ")"}], " ", 
    RowBox[{
     SuperscriptBox["r", "\[Prime]",
      MultilineFunction->None], "(", "t", ")"}]}], "+", 
   RowBox[{
    RowBox[{"er", "(", "t", ")"}], " ", 
    RowBox[{
     SuperscriptBox["r", "\[Prime]\[Prime]",
      MultilineFunction->None], "(", "t", ")"}]}], "+", 
   RowBox[{"ez", " ", 
    RowBox[{
     SuperscriptBox["z", "\[Prime]\[Prime]",
      MultilineFunction->None], "(", "t", ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.684457434672406*^9, {3.684457489231421*^9, 3.6844575365551147`*^9}, {
   3.6844575717001143`*^9, 3.684457638883616*^9}, 3.68445788748771*^9, 
   3.684458322294941*^9}]
}, Open  ]],

Cell["Step 2: Eliminate derivatives of unit vectors", "Text",
 CellChangeTimes->{{3.684457673858871*^9, 3.684457699085923*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"replacements", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"er", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], 
       RowBox[{"e\[Theta]", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"e\[Theta]", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], 
       RowBox[{"er", "[", "t", "]"}]}]}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"accel", "/.", "replacements"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "@", "%"}], "//", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.684457716024233*^9, 3.6844578108232718`*^9}, {
   3.68445787594162*^9, 3.6844579019194613`*^9}, {3.684458052591692*^9, 
   3.6844580541363707`*^9}, 3.6844583366631517`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"e\[Theta]", "(", "t", ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "(", "t", ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]}], "+", 
      RowBox[{
       RowBox[{"r", "(", "t", ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"er", "(", "t", ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["r", "\[Prime]\[Prime]",
        MultilineFunction->None], "(", "t", ")"}], "-", 
      RowBox[{
       RowBox[{"r", "(", "t", ")"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "(", "t", ")"}], "2"]}]}], ")"}]}], "+", 
   RowBox[{"ez", " ", 
    RowBox[{
     SuperscriptBox["z", "\[Prime]\[Prime]",
      MultilineFunction->None], "(", "t", ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.684457784489937*^9, 3.684457811288418*^9}, {
   3.684457878157221*^9, 3.6844578893603*^9}, 3.684457923604822*^9, 
   3.684458054380972*^9, {3.684458324908924*^9, 3.6844583375047903`*^9}}]
}, Open  ]],

Cell["As expected, this equals the value given in the problem set.", "Text",
 CellChangeTimes->{{3.6844584566246862`*^9, 3.684458466860113*^9}}],

Cell["\<\
The Coriolis acceleration reflects the extent to which moving in a radial \
direction while rotating causes you to move ahead or behind relative to the \
rotation you would expect. This is relevant in hurricanes, or on a really \
good playground merry-go-round. \
\>", "Text",
 CellChangeTimes->{{3.6844584566246862`*^9, 3.684458550276464*^9}}],

Cell["\<\
It is really cool to see the Coriolis Acceleration derived, thanks.\
\>", "Reflection",
 CellChangeTimes->{{3.684458557406493*^9, 3.684458582664474*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["19. Time derivatives of unit vectors",
 FontSlant->"Plain"]], "Subsection",
 CellChangeTimes->{{3.6844586762292013`*^9, 3.684458697533518*^9}}],

Cell["\<\
A constant magnitude vector can occupy only points on a sphere of fixed \
radius. Any continuous motion along the surface of that sphere must have \
direction tangent to the surface at that point. Because the radius of a \
sphere (to a given point) is always perpendicular to its tangent line at that \
point, the derivative of a moving vector must be orthogonal to it, implying \
that their dot product is zero.\
\>", "Text",
 CellChangeTimes->{{3.684458699244946*^9, 3.684458817580427*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<s5`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], "\[Equal]", "context"}], ",", 
      RowBox[{"End", "[", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.684456136482444*^9, 3.684456188403949*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{37.9326171875, {0., 7.}}]], "Output",
 CellChangeTimes->{{3.684456162066309*^9, 3.684456189299268*^9}, 
   3.6844563481879463`*^9, 3.6844588267113667`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spiral learning (Wheeee!)", "Section",
 CellChangeTimes->{
  3.684458844912283*^9, {3.684459673168818*^9, 3.684459675811912*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<s6`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], " ", "\[NotEqual]", " ", "context"}], 
      ",", 
      RowBox[{"Begin", "[", "context", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.6844588450013437`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{37.9326171875, {0., 7.}}]], "Output",
 CellChangeTimes->{{3.684458845100564*^9, 3.6844588577465553`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["20. Describe the helix", "Subsection",
 CellChangeTimes->{{3.684458872039857*^9, 3.684458877925745*^9}}],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"r", "(", "z_", ")"}], ":=", "radius"}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   RowBox[{"\[Theta]", "(", "z_", ")"}], ":=", 
   FractionBox["z", 
    RowBox[{"radius", " ", 
     RowBox[{"tan", "(", "\[Beta]", ")"}]}]]}], TraditionalForm]}], "Input",
 CellChangeTimes->{{3.684458860574568*^9, 3.68445886285676*^9}, {
  3.684458918135541*^9, 3.684459086195264*^9}, {3.68445924921194*^9, 
  3.684459257647293*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["21. Estimate system parameters", "Subsection",
 CellChangeTimes->{{3.684459110183009*^9, 3.6844591172990103`*^9}}],

Cell[BoxData[
 InterpretationBox[
  FrameBox[
   StyleBox[
    FormBox[
     StyleBox[
      StyleBox[GridBox[{
         {
          PaneBox["\<\"age\"\>",
           
           BaseStyle->{{
             BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
             LineSpacing -> {0.9, 0, 1.5}, 
             LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
             Left},
           BaselinePosition->Baseline], 
          TemplateBox[{StyleBox[
             StyleBox[
              RowBox[{"10", "\[InvisibleSpace]", " ", 
                StyleBox[
                "\"years\"", {
                 FontSize -> Smaller, FontFamily -> "Helvetica", 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False]}], "Unit"], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False]},
           "RowDefault"]},
         {
          PaneBox["\<\"body weight\"\>",
           
           BaseStyle->{{
             BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
             LineSpacing -> {0.9, 0, 1.5}, 
             LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
             Left},
           BaselinePosition->Baseline], 
          TemplateBox[{StyleBox[
             StyleBox[
              RowBox[{
                RowBox[{"71", "\[NoBreak]", 
                  StyleBox[
                   RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                   Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                  "\[InvisibleSpace]", 
                  StyleBox[
                  "\"lb\"", FontFamily -> "Helvetica", FontSize -> Smaller]}],
                 "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"pounds\"", "\[NoBreak]", 
                   "\")\""}], {FontSize -> Smaller, FontFamily -> "Helvetica", 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}, StripOnInput -> False]}], "Unit"], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False]},
           "RowDefault"]}
        },
        AllowScriptLevelChange->False,
        AutoDelete->False,
        BaselinePosition->Automatic,
        FrameStyle->GrayLevel[0.84],
        GridBoxAlignment->{"Columns" -> {Left, Left}, "Rows" -> {{Baseline}}},
        
        GridBoxBackground->{"Columns" -> {None, None}},
        GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}], "Grid"],
      
      StripOnInput->False,
      LineSpacing->{0.9, 0, 1.5},
      LineIndent->0],
     TraditionalForm], "Output",
    CellSize->{550, Automatic},
    ScriptLevel->0,
    FontFamily->"Times",
    FontSize->14,
    Background->None],
   BaseStyle->{Plain},
   FrameMargins->10,
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False],
  WolframAlphaResult[
  "body weight of 10 year old child", {{"Input", 1}, "Content"}]]], "Input",
 Evaluatable->False,
 CellChangeTimes->{
  3.684459469394581*^9, {3.684459586826374*^9, 3.684459589006524*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"radius", "=", 
   TemplateBox[{"1","\"m\"","meters","\"Meters\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"height", "=", 
   TemplateBox[{"30","\"ft\"","feet","\"Feet\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", "=", 
   TemplateBox[{
    "30",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],"degrees",
     "\"AngularDegrees\""},
    "QuantityPostfix"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", 
   TemplateBox[{"71","\"lb\"","pounds","\"Pounds\""},
    "Quantity"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.684459168867628*^9, 3.684459272096534*^9}, {
  3.684459463641028*^9, 3.6844594952694407`*^9}, {3.6844595378284388`*^9, 
  3.6844595439848337`*^9}}],

Cell["\<\
I hit my time limit (and bedtime) before finishing this problem. If I get a \
chance later, I may complete it and re-upload the result. As a first guess, \
the equations will simplify by removing r(t), \[Theta](t), \
r\[CloseCurlyQuote](t), and \[Theta]\[CloseCurlyQuote](t), leaving just two \
equations representing the vertical velocity and acceleration.\
\>", "Reflection",
 CellChangeTimes->{{3.6844605936035357`*^9, 3.684460702742401*^9}},
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<s6`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], "\[Equal]", "context"}], ",", 
      RowBox[{"End", "[", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.6844588451990623`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{71., {0., 13.}}]], "Output",
 CellChangeTimes->{3.68445885552357*^9, 3.684460733310699*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scratch Work", "Section",
 CellChangeTimes->{{3.684352034538128*^9, 3.6843520403533773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exportNotebookPDF", "[", "]"}]], "Input",
 CellChangeTimes->{{3.684460723261771*^9, 3.684460729218697*^9}}],

Cell[BoxData["\<\"/home/eric/Documents/School/QEA2/Attitude/Bset \
1/Mathematica work.pdf\"\>"], "Output",
 CellChangeTimes->{3.684462129774968*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 1043},
WindowMargins->{{Automatic, -312}, {Automatic, 37}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
InputAliases->{"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> 
  RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "ia" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Inactive"], "cbrt" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
    None], "surd" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
    MultilineFunction -> None], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
  TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
  "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
  "grad" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
  "del." -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
     "\[Placeholder]"}], "delx" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
     "\[Placeholder]"}], "del2" -> RowBox[{
     SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
     "\[Placeholder]"}], "trident" -> "\[Psi]"},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Book"}, "Textbook.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Reflection"], CellDingbat -> "\[EmptyDiamond]", TextAlignment -> 
    Left, MenuSortingValue -> 10000, FontSize -> 16, FontWeight -> "Bold", 
    FontColor -> 
    RGBColor[0.027450980392156862`, 0.6431372549019608, 0.0196078431372549]]},
   Visible -> False, FrontEndVersion -> 
  "11.0 for Linux x86 (64-bit) (July 28, 2016)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
